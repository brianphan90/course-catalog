{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/course-catalog-v2/src/components/FileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/components/FileUpload.vue","mtime":1609282060284},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tname : 'file-upload',\n\n\tprops : {\n\t\tallowedExt : {\n\t\t\ttype : Array\n\t\t},\n\t\t// whether to emit on drop or on upload clicked\n\t\temitImmediately : {\n\t\t\ttype    : Boolean,\n\t\t\tdefault : false,\n\t\t},\n\n\t\treset : {\n\t\t\ttype : Boolean,\n\t\t},\n\n\t\tid : {\n\t\t\ttype    : String,\n\t\t\tdefault : 'manual-upload',\n\t\t},\n\n\t\tpreview : {\n\t\t\ttype : String,\n\t\t},\n\t},\n\n\tmounted() {\n\n\t\tconst { dropzone } = this.$refs;\n\n\t\tconst events = ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'];\n\n\t\tevents.forEach( ( event ) => {\n\n\t\t\tdropzone.addEventListener( event, ( e ) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t} );\n\n\t\t\tdocument.addEventListener( event, ( e ) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t} );\n\n\t\t} );\n\n\n\t},\n\n\tdata : () => ( {\n\t\tdragover : false,\n\t\tfile     : null,\n\t\terror    : null,\n\t\tstate    : 'empty',\n\n\t\tfileSrc : null,\n\t} ),\n\n\twatch : {\n\n\t\tfile( file ) {\n\n\t\t\tthis.error = null;\n\n\t\t\tif ( !file ) {\n\t\t\t\tthis.state = 'empty';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !this.validate( file ) ) {\n\t\t\t\tthis.state = 'error';\n\t\t\t\tthis.error = 'File type not allowed';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.state = 'select';\n\n\t\t\tif ( this.emitImmediately ) {\n\t\t\t\tthis.$emit( 'file', file );\n\t\t\t}\n\n\t\t},\n\n\t\treset( shouldReset ) {\n\n\t\t\tif ( shouldReset ) {\n\t\t\t\tthis.file     = null;\n\t\t\t\tthis.dragover = false;\n\t\t\t\tthis.state    = 'empty';\n\t\t\t\tthis.error    = null;\n\t\t\t\tthis.fileSrc  = null;\n\n\t\t\t\tconst input = document.getElementById( this.id );\n\t\t\t\tinput.value = null;\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputed : {\n\t\tfileType() {\n\t\t\tif ( this.file ) {\n\t\t\t\treturn this.file.type;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\n\t\tfilePreview() {\n\t\t\tconst { fileSrc, preview } = this;\n\t\t\tif ( !fileSrc && !preview ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( fileSrc ) {\n\t\t\t\treturn fileSrc;\n\t\t\t}\n\n\t\t\tif ( preview ) {\n\t\t\t\treturn preview;\n\t\t\t}\n\n\t\t\treturn fileSrc;\n\t\t}\n\t},\n\n\tmethods : {\n\t\thandleDragEvent( e, state ) {\n\n\t\t\t// Dont do anything when leaving button\n\t\t\tif ( e.target.className === 'upload-button' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Dont do anything when entering button\n\t\t\tif ( e.fromElement.className === 'upload-button' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.dragover = state === 'enter';\n\n\t\t},\n\n\t\tgetDropFile( e ) {\n\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\n\t\t\tconst file = e.dataTransfer.files[0];\n\n\t\t\tthis.dragover = false;\n\n\t\t\tthis.file = file;\n\n\t\t},\n\n\t\tgetInputFile( e ) {\n\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\n\t\t\tconst file = e.target.files[0];\n\n\t\t\tthis.file = file;\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = ( fileData ) => {\n\t\t\t\tconsole.log( this );\n\t\t\t\tthis.fileSrc = fileData.target.result;\n\t\t\t};\n\n\t\t\treader.readAsDataURL( file );\n\n\t\t},\n\n\t\tvalidate( file ) {\n\n\t\t\tconst ext = file.type.split( '/' )[1];\n\n\t\t\tlet valid = false;\n\n\t\t\tif ( !this.allowedExt ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis.allowedExt.forEach( ( a ) => {\n\n\t\t\t\tif ( ext === a ) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\tupload( file ) {\n\n\t\t\tthis.$emit( 'file', file );\n\n\t\t\tthis.file = null;\n\t\t\tthis.$refs.fileInput.value = null;\n\n\t\t},\n\n\t}\n\n};\n",{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA","file":"FileUpload.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n\t.file-upload(:class='[state, { \"has-file\" : file }]')\n\t\t.drop-zone(\n\t\t\t@dragenter='handleDragEvent( $event, \"enter\" )'\n\t\t\t@dragleave='handleDragEvent( $event, \"leave\" )'\n\t\t\t@drop='getDropFile( $event )'\n\t\t\t:class='{ dragover }'\n\t\t\tref='dropzone'\n\t\t)\n\t\t\tembed.file-preview(\n\t\t\t\tv-if='filePreview'\n\t\t\t\t:src='filePreview'\n\t\t\t\t:type='fileType'\n\t\t\t)\n\t\t\t.no-file\n\t\t\t\tp Drop Here\n\t\t\t\tp - or -\n\t\t\t.error-message(:class='{ active : error }')\n\t\t\t\tp.error {{ error }}\n\t\t\t.file(v-if='file')\n\t\t\t\tp {{ file.name }}\n\t\t\tlabel.upload-button(:for='id') Choose a file\n\t\t\tinput(:id='id' type='file' @change='getInputFile( $event )' ref='fileInput')\n\t\t.button(v-show='file' @click='upload( file )') Upload\n</template>\n\n<script>\nexport default {\n\tname : 'file-upload',\n\n\tprops : {\n\t\tallowedExt : {\n\t\t\ttype : Array\n\t\t},\n\t\t// whether to emit on drop or on upload clicked\n\t\temitImmediately : {\n\t\t\ttype    : Boolean,\n\t\t\tdefault : false,\n\t\t},\n\n\t\treset : {\n\t\t\ttype : Boolean,\n\t\t},\n\n\t\tid : {\n\t\t\ttype    : String,\n\t\t\tdefault : 'manual-upload',\n\t\t},\n\n\t\tpreview : {\n\t\t\ttype : String,\n\t\t},\n\t},\n\n\tmounted() {\n\n\t\tconst { dropzone } = this.$refs;\n\n\t\tconst events = ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'];\n\n\t\tevents.forEach( ( event ) => {\n\n\t\t\tdropzone.addEventListener( event, ( e ) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t} );\n\n\t\t\tdocument.addEventListener( event, ( e ) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t} );\n\n\t\t} );\n\n\n\t},\n\n\tdata : () => ( {\n\t\tdragover : false,\n\t\tfile     : null,\n\t\terror    : null,\n\t\tstate    : 'empty',\n\n\t\tfileSrc : null,\n\t} ),\n\n\twatch : {\n\n\t\tfile( file ) {\n\n\t\t\tthis.error = null;\n\n\t\t\tif ( !file ) {\n\t\t\t\tthis.state = 'empty';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !this.validate( file ) ) {\n\t\t\t\tthis.state = 'error';\n\t\t\t\tthis.error = 'File type not allowed';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.state = 'select';\n\n\t\t\tif ( this.emitImmediately ) {\n\t\t\t\tthis.$emit( 'file', file );\n\t\t\t}\n\n\t\t},\n\n\t\treset( shouldReset ) {\n\n\t\t\tif ( shouldReset ) {\n\t\t\t\tthis.file     = null;\n\t\t\t\tthis.dragover = false;\n\t\t\t\tthis.state    = 'empty';\n\t\t\t\tthis.error    = null;\n\t\t\t\tthis.fileSrc  = null;\n\n\t\t\t\tconst input = document.getElementById( this.id );\n\t\t\t\tinput.value = null;\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputed : {\n\t\tfileType() {\n\t\t\tif ( this.file ) {\n\t\t\t\treturn this.file.type;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\n\t\tfilePreview() {\n\t\t\tconst { fileSrc, preview } = this;\n\t\t\tif ( !fileSrc && !preview ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( fileSrc ) {\n\t\t\t\treturn fileSrc;\n\t\t\t}\n\n\t\t\tif ( preview ) {\n\t\t\t\treturn preview;\n\t\t\t}\n\n\t\t\treturn fileSrc;\n\t\t}\n\t},\n\n\tmethods : {\n\t\thandleDragEvent( e, state ) {\n\n\t\t\t// Dont do anything when leaving button\n\t\t\tif ( e.target.className === 'upload-button' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Dont do anything when entering button\n\t\t\tif ( e.fromElement.className === 'upload-button' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.dragover = state === 'enter';\n\n\t\t},\n\n\t\tgetDropFile( e ) {\n\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\n\t\t\tconst file = e.dataTransfer.files[0];\n\n\t\t\tthis.dragover = false;\n\n\t\t\tthis.file = file;\n\n\t\t},\n\n\t\tgetInputFile( e ) {\n\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\n\t\t\tconst file = e.target.files[0];\n\n\t\t\tthis.file = file;\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = ( fileData ) => {\n\t\t\t\tconsole.log( this );\n\t\t\t\tthis.fileSrc = fileData.target.result;\n\t\t\t};\n\n\t\t\treader.readAsDataURL( file );\n\n\t\t},\n\n\t\tvalidate( file ) {\n\n\t\t\tconst ext = file.type.split( '/' )[1];\n\n\t\t\tlet valid = false;\n\n\t\t\tif ( !this.allowedExt ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis.allowedExt.forEach( ( a ) => {\n\n\t\t\t\tif ( ext === a ) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\tupload( file ) {\n\n\t\t\tthis.$emit( 'file', file );\n\n\t\t\tthis.file = null;\n\t\t\tthis.$refs.fileInput.value = null;\n\n\t\t},\n\n\t}\n\n};\n</script>\n\n<style lang=\"scss\">\n\t.file-upload {\n\t\tmargin: 15px;\n\n\t\t&.empty {\n\n\t\t\t.drop-zone {\n\t\t\t\t.no-file {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t&.select {\n\n\t\t\t.drop-zone {\n\t\t\t\t.file {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.button {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t}\n\n\t\t&.error {\n\n\t\t\t.drop-zone {\n\t\t\t\t.file {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\n\t\t\t\t.error-message {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tinput[type=\"file\"] {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.drop-zone {\n\t\t\tborder: #4d6ea2 dashed 1px;\n\t\t\tborder-radius: 5px;\n\t\t\tpadding: 20px 20px 40px;\n\t\t\ttext-align: center;\n\n\t\t\t&.dragover {\n\t\t\t\tbackground-color: #4d6ea2;\n\t\t\t}\n\n\t\t\t> * {\n\t\t\t\tflex: 1 0 0;\n\t\t\t}\n\n\t\t\t.file-preview {\n\t\t\t\tflex: 0 0 100%;\n\t\t\t\tmax-width: 100%;\n\t\t\t\theight: 150px;\n\t\t\t\tmargin-bottom: 15px;\n\t\t\t}\n\n\t\t\t.no-file {\n\t\t\t\tdisplay: none;\n\n\t\t\t\tp {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tpointer-events: none;\n\t\t\t\t\tmargin: 10px 0px;\n\n\t\t\t\t\t&:nth-child( 2 ) {\n\n\t\t\t\t\t\tmargin-bottom: 25px;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.file {\n\t\t\t\tdisplay: none;\n\t\t\t\tcolor: white;\n\t\t\t\tpointer-events: none;\n\t\t\t\tmargin: 10px 0px 25px;\n\n\t\t\t}\n\n\t\t\t.error-message {\n\t\t\t\tdisplay: none;\n\t\t\t\tcolor: white;\n\t\t\t\tpointer-events: none;\n\t\t\t\tmargin: 10px 0px;\n\n\t\t\t\t&.active {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\topacity: 1!important;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlabel.upload-button {\n\t\t\t\tbackground-color: #4d6ea2;\n\t\t\t\tpadding: 10px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tcolor: white;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\n\t\t.button {\n\t\t\tdisplay: none;\n\t\t\tbackground-color: #4d6ea2;\n\t\t\tmargin-top: 10px;\n\t\t}\n\n\t}\n</style>\n"]}]}