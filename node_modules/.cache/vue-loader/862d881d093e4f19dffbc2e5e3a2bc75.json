{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/course-catalog-v2/src/components/UserSwiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/components/UserSwiper.vue","mtime":1609282060287},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\n\nimport { Ref } from '@/lib/db';\n\nexport default {\n\tname : 'user-swiper',\n\n\tdata : () => ( {\n\t\tswiper : null,\n\n\t\tuid  : null,\n\n\t\tproviders : [\n\t\t\t// {\n\t\t\t// \tname : 'twitter',\n\t\t\t// \tid   : 'twitter.com',\n\t\t\t// \ticon : 'twitter.svg',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tname : 'google',\n\t\t\t\tid   : 'google.com',\n\t\t\t\ticon : 'google.svg',\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tname : 'facebook',\n\t\t\t// \tid   : 'facebook.com',\n\t\t\t// \ticon : 'facebook.svg',\n\t\t\t// },\n\t\t],\n\n\t\tstandalone : false,\n\n\t\tloginState : 'sign-in',\n\t\temail      : '',\n\t\tname       : '',\n\t\tpassword   : '',\n\t\ttype       : 'password',\n\t\terror      : '',\n\n\t} ),\n\n\tcomputed : {\n\t\tstate() {\n\t\t\treturn this.$store.state.userSwiperState;\n\t\t},\n\t\tuser() {\n\t\t\treturn this.$store.state.user;\n\t\t},\n\t},\n\n\twatch : {\n\n\t\tstate( state, oldState ) {\n\n\t\t\tif ( oldState === state ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( state === 'open' && this.swiper ) {\n\t\t\t\tthis.swiper.slideTo( 1 );\n\t\t\t}\n\n\t\t\tif ( state === 'closed' ) {\n\t\t\t\tthis.swiper.slideTo( 0 )\n\t\t\t}\n\n\t\t},\n\n\t\tloginState() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\temail() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\tpassword() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t},\n\n\t/* life cycle */\n\n\tcreated() {\n\n\t\t// providers from firebase\n\t\tconst providers = {\n\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t};\n\n\t\t// when page reloads check\n\t\t// if this was a redirect\n\t\t// from a previous auth\n\t\tfirebase.auth()\n\t\t\t.getRedirectResult()\n\t\t\t.then( this.saveUser ) // store user\n\t\t\t.catch( ( error ) => { // maybe they already have an account on another provider\n\n\t\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\t\tfirebase.auth().fetchProvidersForEmail( email )\n\t\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t\tconst method = methods[0];\n\n\t\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t},\n\n\tmounted() {\n\t\tthis.init();\n\n\t\t// this.standalone = Browser.isSafari && window.navigator.standalone;\n\t},\n\n\tmethods : {\n\n\t\tinit() {\n\t\t\tconst self = this;\n\n\t\t\tconst { swiperWrapper } = this.$refs;\n\t\t\tthis.swiper = new Swiper( swiperWrapper, { // eslint-disable-line\n\n\t\t\t\t// auto initialize this swiper\n\t\t\t\tinit         : true,\n\t\t\t\tinitialSlide : 0,\n\n\t\t\t\t// swiper settings\n\t\t\t\tslidesPerView   : 'auto', // don't force every slide to be 100vw\n\t\t\t\tspeed           : 400,    // ms for when you let go of swipe\n\t\t\t\tspaceBetween    : 0,      // no space between\n\t\t\t\tresistanceRatio : 0,      // stops you from swiping past all slides\n\t\t\t\tdirection       : 'horizontal',\n\n\t\t\t\tthreshold : 50, // min distance for scroll to work\n\n\t\t\t\ton : {\n\n\t\t\t\t\tinit() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t},\n\n\t\t\t\t\tslideChangeTransitionEnd() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclose() {\n\t\t\tthis.$store.dispatch( 'updateStore', ['userSwiperState', 'closed'] );\n\t\t},\n\n\t\t/* sign in */\n\n\t\tsignInWith( id ) {\n\n\t\t\tconst providers = {\n\t\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t\t};\n\n\t\t\tconst provider = providers[id];\n\n\t\t\t// mobile sign in\n\t\t\tif ( window.innerWidth <= 768 ) {\n\n\t\t\t\treturn firebase.auth().signInWithRedirect( provider );\n\n\t\t\t\t/* *\n\t\t\t\t * the rest of the logic for this\n\t\t\t\t * is in the created block of this\n\t\t\t\t * view model. this function requires\n\t\t\t\t * a page reload\n\t\t\t\t */\n\n\t\t\t}\n\n\t\t\t// desktop sign in\n\t\t\treturn firebase.auth()\n\t\t\t\t.signInWithPopup( provider )\n\t\t\t\t.then( this.saveUser )\n\t\t\t\t.catch( this.handleAuthFailure );\n\t\t},\n\n\t\thandleAuthFailure( error ) {\n\n\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\treturn firebase.auth()\n\t\t\t\t\t.fetchProvidersForEmail( email )\n\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t// sign in with proper provider\n\n\t\t\t\t\t\tconst method = methods[0];\n\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t} )\n\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t// link the accounts\n\n\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t// does this happen with a mobile sign in ?\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn '';\n\n\t\t},\n\n\t\tsaveUser( result ) {\n\n\t\t\tconst { user, additionalUserInfo } = result;\n\t\t\tconst { profile } = additionalUserInfo;\n\n\t\t\tconst { providerId } = additionalUserInfo;\n\n\t\t\tconst userInfo = {\n\t\t\t\tname  : user.displayName,\n\t\t\t\temail : user.email\n\t\t\t};\n\n\t\t\tswitch ( providerId ) {\n\n\t\t\t\tcase 'twitter.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.profile_image_url,\n\t\t\t\t\t\tscreenName : profile.screen_name\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'facebook.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture.data.url,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'google.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.log( `${providerId} is not a provider` );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn Ref\n\t\t\t\t.child( 'users' )\n\t\t\t\t.child( user.uid )\n\t\t\t\t.update( userInfo );\n\n\n\t\t},\n\n\t\tsignOut() {\n\n\t\t\tfirebase.auth()\n\t\t\t\t.signOut()\n\t\t\t\t.then( () => this.close() );\n\n\t\t},\n\n\t\tloginAction() {\n\n\t\t\tconst state = this.loginState;\n\n\t\t\tif ( state === 'register' ) {\n\t\t\t\tthis.registerWithEmail();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.signInWithEmail();\n\n\t\t},\n\n\t\tsignInWithEmail() {\n\n\t\t\tconst { email, password } = this;\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().signInWithEmailAndPassword( email, password )\n\t\t\t\t.then( () => {\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\t\t},\n\n\t\tregisterWithEmail() {\n\n\t\t\tconst { email, password, name } = this;\n\n\t\t\tif ( !this.validateRegister() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().createUserWithEmailAndPassword( email, password )\n\t\t\t\t.then( ( results ) => {\n\n\t\t\t\t\tconsole.log( results );\n\n\t\t\t\t\tconst { user } = results;\n\t\t\t\t\tconst { uid } = user;\n\n\t\t\t\t\tuser.updateProfile( {\n\t\t\t\t\t\tdisplayName : name\n\t\t\t\t\t} );\n\n\t\t\t\t\tRef.child( 'users' )\n\t\t\t\t\t\t.child( uid )\n\t\t\t\t\t\t.set( {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tscreenName : email\n\t\t\t\t\t\t} );\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\n\t\t},\n\n\t\tvalidateRegister() {\n\n\t\t\tconst inputs = ['email', 'name', 'password'];\n\t\t\tlet valid = true;\n\n\t\t\tinputs.forEach( ( input ) => {\n\n\t\t\t\tconst value = this[input];\n\n\t\t\t\tif ( !valid ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tthis.error = `Must input a value for ${input}`;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\ttoggleLoginState() {\n\n\t\t\tif ( this.loginState === 'sign-in' ) {\n\t\t\t\tthis.loginState = 'register';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loginState = 'sign-in';\n\n\t\t}\n\n\t}\n}\n",{"version":3,"sources":["UserSwiper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"UserSwiper.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n.swiper-container#user-swiper(ref='swiperWrapper')\n\t.swiper-wrapper\n\t\t.swiper-slide.empty(:class='{ \"pointer-events\" : state === \"open\" }' @click.self='close')\n\t\t.swiper-slide.user(:class='state')\n\t\t\t.top\n\t\t\t\t.icon-close(@click='close')\n\t\t\t.content\n\t\t\t\t.content-wrapper.standalone(v-if='standalone && !user')\n\t\t\t\t\t.login(:class='loginState')\n\t\t\t\t\t\th1 {{ loginState === \"sign-in\" ? \"Sign In\" : \"Register\" }}\n\t\t\t\t\t\tp\n\t\t\t\t\t\t.input-wrapper\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='email') email\n\t\t\t\t\t\t\t\tinput(id='email' v-model='email' type='email')\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='name') name\n\t\t\t\t\t\t\t\tinput(id='name' v-model='name')\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='password') password\n\t\t\t\t\t\t\t\t.row\n\t\t\t\t\t\t\t\t\tinput(id='password' v-model='password' v-bind:type='type')\n\t\t\t\t\t\t\t\t\ti.material-icons(v-show='type == \"password\"' @click='type = \"text\"') visibility\n\t\t\t\t\t\t\t\t\ti.material-icons(v-show='type == \"text\"' @click='type = \"password\"') visibility_off\n\t\t\t\t\t\t.btn(@click='loginAction') {{ loginState === \"sign-in\" ? \"Sign In\" : \"Register\" }}\n\t\t\t\t\t\t.error(v-if='error') {{ error }}\n\t\t\t\t\t\t.bottom(@click='toggleLoginState')\n\t\t\t\t\t\t\tspan\n\t\t\t\t\t\t\tspan.blue\n\t\t\t\t.content-wrapper.sign-in(v-else-if='!user')\n\t\t\t\t\th1 Sign In\n\t\t\t\t\tp.spacey with an existing service\n\t\t\t\t\t.social-medias.row\n\t\t\t\t\t\t.social-media(\n\t\t\t\t\t\t\tv-for='provider in providers'\n\t\t\t\t\t\t\t:class='provider.name'\n\t\t\t\t\t\t\t@click='signInWith( provider.id )'\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\timg(:src='`/img/${provider.icon}`')\n\t\t\t\t.content-wrapper.user(v-else)\n\t\t\t\t\t.profile-picture\n\t\t\t\t\t\t.picture(:style='{ backgroundImage : `url(${user.photoURL})` }' v-if='user.photoURL')\n\t\t\t\t\t\t.icon.icon-person(v-else)\n\t\t\t\t\t.name\n\t\t\t\t\t\th1 {{ user.name }}\n\t\t\t\t\t\tp.spacey {{ user.screenName }}\n\t\t\t\t\t.btn.sign-out(@click='signOut') sign out\n\t\t\t\t\tslot(name='after-sign-out-button')\n\n\n</template>\n\n<script>\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\n\nimport { Ref } from '@/lib/db';\n\nexport default {\n\tname : 'user-swiper',\n\n\tdata : () => ( {\n\t\tswiper : null,\n\n\t\tuid  : null,\n\n\t\tproviders : [\n\t\t\t// {\n\t\t\t// \tname : 'twitter',\n\t\t\t// \tid   : 'twitter.com',\n\t\t\t// \ticon : 'twitter.svg',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tname : 'google',\n\t\t\t\tid   : 'google.com',\n\t\t\t\ticon : 'google.svg',\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tname : 'facebook',\n\t\t\t// \tid   : 'facebook.com',\n\t\t\t// \ticon : 'facebook.svg',\n\t\t\t// },\n\t\t],\n\n\t\tstandalone : false,\n\n\t\tloginState : 'sign-in',\n\t\temail      : '',\n\t\tname       : '',\n\t\tpassword   : '',\n\t\ttype       : 'password',\n\t\terror      : '',\n\n\t} ),\n\n\tcomputed : {\n\t\tstate() {\n\t\t\treturn this.$store.state.userSwiperState;\n\t\t},\n\t\tuser() {\n\t\t\treturn this.$store.state.user;\n\t\t},\n\t},\n\n\twatch : {\n\n\t\tstate( state, oldState ) {\n\n\t\t\tif ( oldState === state ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( state === 'open' && this.swiper ) {\n\t\t\t\tthis.swiper.slideTo( 1 );\n\t\t\t}\n\n\t\t\tif ( state === 'closed' ) {\n\t\t\t\tthis.swiper.slideTo( 0 )\n\t\t\t}\n\n\t\t},\n\n\t\tloginState() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\temail() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\tpassword() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t},\n\n\t/* life cycle */\n\n\tcreated() {\n\n\t\t// providers from firebase\n\t\tconst providers = {\n\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t};\n\n\t\t// when page reloads check\n\t\t// if this was a redirect\n\t\t// from a previous auth\n\t\tfirebase.auth()\n\t\t\t.getRedirectResult()\n\t\t\t.then( this.saveUser ) // store user\n\t\t\t.catch( ( error ) => { // maybe they already have an account on another provider\n\n\t\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\t\tfirebase.auth().fetchProvidersForEmail( email )\n\t\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t\tconst method = methods[0];\n\n\t\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t},\n\n\tmounted() {\n\t\tthis.init();\n\n\t\t// this.standalone = Browser.isSafari && window.navigator.standalone;\n\t},\n\n\tmethods : {\n\n\t\tinit() {\n\t\t\tconst self = this;\n\n\t\t\tconst { swiperWrapper } = this.$refs;\n\t\t\tthis.swiper = new Swiper( swiperWrapper, { // eslint-disable-line\n\n\t\t\t\t// auto initialize this swiper\n\t\t\t\tinit         : true,\n\t\t\t\tinitialSlide : 0,\n\n\t\t\t\t// swiper settings\n\t\t\t\tslidesPerView   : 'auto', // don't force every slide to be 100vw\n\t\t\t\tspeed           : 400,    // ms for when you let go of swipe\n\t\t\t\tspaceBetween    : 0,      // no space between\n\t\t\t\tresistanceRatio : 0,      // stops you from swiping past all slides\n\t\t\t\tdirection       : 'horizontal',\n\n\t\t\t\tthreshold : 50, // min distance for scroll to work\n\n\t\t\t\ton : {\n\n\t\t\t\t\tinit() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t},\n\n\t\t\t\t\tslideChangeTransitionEnd() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclose() {\n\t\t\tthis.$store.dispatch( 'updateStore', ['userSwiperState', 'closed'] );\n\t\t},\n\n\t\t/* sign in */\n\n\t\tsignInWith( id ) {\n\n\t\t\tconst providers = {\n\t\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t\t};\n\n\t\t\tconst provider = providers[id];\n\n\t\t\t// mobile sign in\n\t\t\tif ( window.innerWidth <= 768 ) {\n\n\t\t\t\treturn firebase.auth().signInWithRedirect( provider );\n\n\t\t\t\t/* *\n\t\t\t\t * the rest of the logic for this\n\t\t\t\t * is in the created block of this\n\t\t\t\t * view model. this function requires\n\t\t\t\t * a page reload\n\t\t\t\t */\n\n\t\t\t}\n\n\t\t\t// desktop sign in\n\t\t\treturn firebase.auth()\n\t\t\t\t.signInWithPopup( provider )\n\t\t\t\t.then( this.saveUser )\n\t\t\t\t.catch( this.handleAuthFailure );\n\t\t},\n\n\t\thandleAuthFailure( error ) {\n\n\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\treturn firebase.auth()\n\t\t\t\t\t.fetchProvidersForEmail( email )\n\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t// sign in with proper provider\n\n\t\t\t\t\t\tconst method = methods[0];\n\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t} )\n\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t// link the accounts\n\n\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t// does this happen with a mobile sign in ?\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn '';\n\n\t\t},\n\n\t\tsaveUser( result ) {\n\n\t\t\tconst { user, additionalUserInfo } = result;\n\t\t\tconst { profile } = additionalUserInfo;\n\n\t\t\tconst { providerId } = additionalUserInfo;\n\n\t\t\tconst userInfo = {\n\t\t\t\tname  : user.displayName,\n\t\t\t\temail : user.email\n\t\t\t};\n\n\t\t\tswitch ( providerId ) {\n\n\t\t\t\tcase 'twitter.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.profile_image_url,\n\t\t\t\t\t\tscreenName : profile.screen_name\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'facebook.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture.data.url,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'google.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.log( `${providerId} is not a provider` );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn Ref\n\t\t\t\t.child( 'users' )\n\t\t\t\t.child( user.uid )\n\t\t\t\t.update( userInfo );\n\n\n\t\t},\n\n\t\tsignOut() {\n\n\t\t\tfirebase.auth()\n\t\t\t\t.signOut()\n\t\t\t\t.then( () => this.close() );\n\n\t\t},\n\n\t\tloginAction() {\n\n\t\t\tconst state = this.loginState;\n\n\t\t\tif ( state === 'register' ) {\n\t\t\t\tthis.registerWithEmail();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.signInWithEmail();\n\n\t\t},\n\n\t\tsignInWithEmail() {\n\n\t\t\tconst { email, password } = this;\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().signInWithEmailAndPassword( email, password )\n\t\t\t\t.then( () => {\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\t\t},\n\n\t\tregisterWithEmail() {\n\n\t\t\tconst { email, password, name } = this;\n\n\t\t\tif ( !this.validateRegister() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().createUserWithEmailAndPassword( email, password )\n\t\t\t\t.then( ( results ) => {\n\n\t\t\t\t\tconsole.log( results );\n\n\t\t\t\t\tconst { user } = results;\n\t\t\t\t\tconst { uid } = user;\n\n\t\t\t\t\tuser.updateProfile( {\n\t\t\t\t\t\tdisplayName : name\n\t\t\t\t\t} );\n\n\t\t\t\t\tRef.child( 'users' )\n\t\t\t\t\t\t.child( uid )\n\t\t\t\t\t\t.set( {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tscreenName : email\n\t\t\t\t\t\t} );\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\n\t\t},\n\n\t\tvalidateRegister() {\n\n\t\t\tconst inputs = ['email', 'name', 'password'];\n\t\t\tlet valid = true;\n\n\t\t\tinputs.forEach( ( input ) => {\n\n\t\t\t\tconst value = this[input];\n\n\t\t\t\tif ( !valid ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tthis.error = `Must input a value for ${input}`;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\ttoggleLoginState() {\n\n\t\t\tif ( this.loginState === 'sign-in' ) {\n\t\t\t\tthis.loginState = 'register';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loginState = 'sign-in';\n\n\t\t}\n\n\t}\n}\n</script>\n\n\n<style lang=\"scss\">\n#user-swiper {\n\t.user {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: stretch;\n\n\t\t.top {\n\t\t\tflex-shrink: 0;\n\t\t}\n\n\t\t.content {\n\t\t\tflex: 1 1 0;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t.content-wrapper {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tflex: 1 1 0;\n\t\t\t}\n\t\t}\n\t}\n\n  .top {\n    padding: 15px;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .content {\n\n\t\t.content-wrapper.standalone {\n\n\t\t\t.login {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tposition: relative;\n\t\t\t\theight: 100vh;\n\n\t\t\t\th1 {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tcolor: $primary;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tmargin: 15px;\n\t\t\t\t}\n\n\t\t\t\t.input-wrapper {\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t\tborder-radius: 20px;\n\t\t\t\t\tbox-shadow: $floatingObject;\n\n\t\t\t\t\t.input {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\t\tborder-bottom: 1px solid #cfcfcf;\n\n\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\t\tletter-spacing: 3px;\n\t\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinput {\n\t\t\t\t\t\t\tflex: 1 1 0;\n\t\t\t\t\t\t\tpadding: 5px 0;\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&:last-child {\n\t\t\t\t\t\t\tborder-bottom: 1px solid transparent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.btn {\n\t\t\t\t\tbackground-image: linear-gradient(to right, darken( $primary, 5 ), lighten( $primary, 15 ) );\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 15px 15px;\n\t\t\t\t\tborder-radius: 25px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t}\n\n\t\t\t\t.error {\n\t\t\t\t\tmargin: 20px;\n    \t\t\ttext-align: center;\n\t\t\t\t\tcolor: $cancel;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t}\n\n\t\t\t\t.bottom {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t\talign-self: center;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 30px;\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&.sign-in {\n\n\t\t\t\t\tp {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'sign in to your account with your email and password';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.input-wrapper {\n\n\t\t\t\t\t\t.input {\n\t\t\t\t\t\t &:nth-child(2) {\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'No Account?';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&.blue {\n\t\t\t\t\t\t\tcolor: #0e68f8;\n\t\t\t\t\t\t\tmargin-left: 5px;\n\n\t\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\t\tcontent: 'Register'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t&.register {\n\n\t\t\t\t\tp {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'create an account to help track your saved courses';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'Have an Account?';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&.blue {\n\t\t\t\t\t\t\tcolor: #0e68f8;\n\t\t\t\t\t\t\tmargin-left: 5px;\n\n\t\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\t\tcontent: 'Sign In'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n    .content-wrapper.sign-in {\n\n      h1 {\n        text-align: center;\n\t\t\t\tfont-size: 48px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tcolor: $primary;\n      }\n\n      p {\n        text-align: center;\n        margin: 15px 10px 0px 10px;\n      }\n\n      .social-medias {\n        justify-content: center;\n        margin-top: 30px;\n\n        .social-media {\n          height: 60px;\n          width: 60px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 10px;\n\n          &.twitter {\n            background-color: $twitterBlue;\n          }\n\n          &.facebook {\n            background-color: $facebookBlue;\n          }\n\n          &.google {\n            background-color: $googleRed;\n          }\n        }\n      }\n    }\n\n    .content-wrapper.user {\n\n      .profile-picture {\n\n        .picture {\n          position: relative;\n          left: 50%;\n          transform: translateX(-50%);\n          height: 90px;\n          width: 90px;\n          border-radius: 50%;\n          background-size: cover;\n          background-position: center center;\n\t\t\t\t}\n\n\t\t\t\t.icon-person {\n\t\t\t\t\tfont-size: 100px;\n\t\t\t\t}\n\n      }\n\n      .name {\n        margin-top: 30px;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tpadding: 0 30px;\n\n        h1,\n        p {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        h1 {\n          font-size: 36px;\n          text-align: center;\n        }\n\n        p {\n          text-align: center;\n          margin-top: 10px;\n          font-size: 12px;\n        }\n      }\n\n      .btn {\n        margin-top: 30px;\n        position: relative;\n        display: inline-block;\n\t\t\t}\n    }\n\t}\n\n\t.icon-close {\n\t\theight: 30px;\n\t\twidth: 30px;\n\t\tposition: relative;\n\t\tcursor: pointer;\n\n\t\t&::before,\n\t\t&::after {\n\t\t\tcontent: ' ';\n\t\t\theight: 24px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground-color: $primary;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t}\n\n\t\t&::before {\n\t\t\ttransform: translate(-50%,-50%) rotate(45deg);\n\t\t}\n\n\t\t&::after {\n\t\t\ttransform: translate(-50%,-50%) rotate(-45deg);\n\t\t}\n\t}\n\n\t.btn {\n\t\tfont-size: 12px;\n\t\ttext-transform: uppercase;\n\t\tpadding: 15px;\n\t\tborder-radius: 40px;\n\t\tbackground-color: $primary;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\topacity: 1;\n\t\ttransition: opacity 0.2s ease;\n\t\tfont-family: \"Work Sans\", opensans;\n\t\tletter-spacing: 2px;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none;   /* Chrome/Safari/Opera */\n\t\t-khtml-user-select: none;    /* Konqueror */\n\t\t-moz-user-select: none;      /* Firefox */\n\t\t-ms-user-select: none;       /* Internet Explorer/Edge */\n\t\tuser-select: none;           /* Non-prefixed version, currently\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnot supported by any browser */\n\t}\n}\n\n/* tablets and desktops */\n@media only screen and (min-width : 768px) {\n\n\t.swiper-slide.user {\n\t\twidth: 330px;\n\t\tbox-shadow: none;\n\t\ttransition: box-shadow 0.2s ease;\n\n\t\t&.open {\n\t\t\tbox-shadow: $floatingObject !important;\n\t\t}\n\t}\n}\n</style>\n\n"]}]}