{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/course-catalog-v2/src/components/SectorInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/components/SectorInfo.vue","mtime":1609282060285},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { Ref } from '@/lib/db';\nexport default {\n  name: 'sector-info',\n  data: function data() {\n    return {\n      schoolName: '',\n      sectorName: '',\n      sectorCard: null,\n      // Info on the cte Cards. fileUrl, iconUrl\n      pathways: null,\n      sector: null,\n      // has value and description\n      isDescriptionOpen: {} // Keeps track of which pathway descriptions are showing\n\n    };\n  },\n  computed: {\n    filters: function filters() {\n      return this.$store.state.filters;\n    }\n  },\n  created: function created() {\n    this.schoolName = this.$route.query.schoolName;\n    this.sectorName = this.$route.query.sectorName;\n  },\n  watch: {\n    sectorName: function sectorName() {\n      var _this = this;\n\n      var schoolName = this.schoolName,\n          sectorName = this.sectorName;\n      Ref.child('cte').child(schoolName).child(sectorName).once('value').then(function (snapshot) {\n        _this.sectorCard = snapshot.val();\n      });\n      Ref.child('cteSectors').child(sectorName).once('value').then(function (snapshot) {\n        _this.sector = snapshot.val();\n      });\n      Ref.child('ctePathways').orderByChild('sector').equalTo(sectorName).once('value').then(function (snapshot) {\n        _this.pathways = snapshot.val();\n      });\n    }\n  },\n  methods: {\n    toggleDescription: function toggleDescription(pathwayName) {\n      var isOpen = this.isDescriptionOpen[pathwayName] ? true : false;\n      Vue.set(this.isDescriptionOpen, pathwayName, !isOpen);\n    },\n    viewPathwayCourses: function viewPathwayCourses(pathwayName) {\n      // const schoolFilter = this.filters.find( ( filter ) => {\n      // \tconst { type } = filter;\n      // \tif ( type !== 'list' && type !== 'multi-list' ) {\n      // \t\treturn false;\n      // \t}\n      // \treturn filter.options.find( option => option.value === this.schoolName );\n      // } );\n      var pathwayFilter = this.filters.find(function (filter) {\n        var type = filter.type;\n\n        if (type !== 'list' && type !== 'multi-list') {\n          return false;\n        }\n\n        return filter.options.find(function (option) {\n          return option.value === pathwayName;\n        });\n      });\n\n      var query = function () {\n        var obj = {}; // if ( schoolFilter ) {\n        // \tquery[schoolFilter.key] = this.schoolName;\n        // }\n\n        if (pathwayFilter) {\n          obj[pathwayFilter.key] = pathwayName;\n        }\n\n        obj.fromSectorInfo = true;\n        return obj;\n      }();\n\n      this.$router.push({\n        path: 'courses',\n        query: query\n      });\n    },\n    goBack: function goBack() {\n      this.$router.push('cte');\n    }\n  }\n};",{"version":3,"sources":["SectorInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n\t.sector-info\n\t\t.side(v-if='pathways')\n\t\t\t.sector(v-if='sectorCard')\n\t\t\t\t.title\n\t\t\t\t\timg(v-if='sectorCard.iconUrl' :src='sectorCard.iconUrl')\n\t\t\t\t\th2 {{ sectorCard.title }}\n\t\t\t\t//- .description\n\t\t\t\t//- \tp {{ sector.description }}\n\t\t\t.pathways\n\t\t\t\tp.header Pathways\n\t\t\t\t.pathway(v-for='pathway in pathways')\n\t\t\t\t\tp.name {{ pathway.value }}\n\t\t\t\t\t.pathway-options\n\t\t\t\t\t\tp(@click='toggleDescription( pathway.value )') {{ isDescriptionOpen[pathway.value] ? 'hide' : 'full' }} description\n\t\t\t\t\t\t.dot\n\t\t\t\t\t\tp(@click='viewPathwayCourses( pathway.value )') view courses\n\t\t\t\t\t.pathway-description(:class='{ open : isDescriptionOpen[pathway.value] }')\n\t\t\t\t\t\tp(v-html='pathway.description')\n\t\tiframe.pdf-viewer(v-if='sectorCard && sectorCard.fileUrl' :src='sectorCard.fileUrl')\n\t\t.no-pdf(v-else)\n\t\t\th1 No PDF uploaded for this CTE Sector\n\t\t\t.button(@click='goBack') Go Back\n\n\n</template>\n\n<script>\nimport Vue from 'vue';\nimport { Ref } from '@/lib/db';\n\nexport default {\n\tname : 'sector-info',\n\n\tdata : () => ( {\n\t\tschoolName : '',\n\t\tsectorName : '',\n\n\t\tsectorCard : null, // Info on the cte Cards. fileUrl, iconUrl\n\t\tpathways   : null,\n\t\tsector     : null, // has value and description\n\n\t\tisDescriptionOpen : {} // Keeps track of which pathway descriptions are showing\n\t} ),\n\n\tcomputed : {\n\t\tfilters() {\n\t\t\treturn this.$store.state.filters;\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.schoolName = this.$route.query.schoolName;\n\t\tthis.sectorName = this.$route.query.sectorName;\n\t},\n\n\twatch : {\n\t\tsectorName() {\n\t\t\tconst { schoolName, sectorName } = this;\n\n\t\t\tRef\n\t\t\t\t.child( 'cte' )\n\t\t\t\t.child( schoolName )\n\t\t\t\t.child( sectorName )\n\t\t\t\t.once( 'value' )\n\t\t\t\t.then( ( snapshot ) => {\n\t\t\t\t\tthis.sectorCard = snapshot.val();\n\t\t\t\t} );\n\n\t\t\tRef\n\t\t\t\t.child( 'cteSectors' )\n\t\t\t\t.child( sectorName )\n\t\t\t\t.once( 'value' )\n\t\t\t\t.then( ( snapshot ) => {\n\t\t\t\t\tthis.sector = snapshot.val();\n\t\t\t\t} );\n\n\t\t\tRef\n\t\t\t\t.child( 'ctePathways' )\n\t\t\t\t.orderByChild( 'sector' )\n\t\t\t\t.equalTo( sectorName )\n\t\t\t\t.once( 'value' )\n\t\t\t\t.then( ( snapshot ) => {\n\t\t\t\t\tthis.pathways = snapshot.val();\n\t\t\t\t} );\n\t\t},\n\t},\n\n\tmethods : {\n\t\ttoggleDescription( pathwayName ) {\n\t\t\tconst isOpen = this.isDescriptionOpen[pathwayName] ? true : false;\n\n\t\t\tVue.set( this.isDescriptionOpen, pathwayName, !isOpen );\n\t\t},\n\n\t\tviewPathwayCourses( pathwayName ) {\n\t\t\t// const schoolFilter = this.filters.find( ( filter ) => {\n\t\t\t// \tconst { type } = filter;\n\n\t\t\t// \tif ( type !== 'list' && type !== 'multi-list' ) {\n\t\t\t// \t\treturn false;\n\t\t\t// \t}\n\n\t\t\t// \treturn filter.options.find( option => option.value === this.schoolName );\n\t\t\t// } );\n\n\t\t\tconst pathwayFilter = this.filters.find( ( filter ) => {\n\t\t\t\tconst { type } = filter;\n\n\t\t\t\tif ( type !== 'list' && type !== 'multi-list' ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn filter.options.find( option => option.value === pathwayName );\n\t\t\t} );\n\n\t\t\tconst query = ( () => {\n\t\t\t\tconst obj = {};\n\t\t\t\t// if ( schoolFilter ) {\n\t\t\t\t// \tquery[schoolFilter.key] = this.schoolName;\n\t\t\t\t// }\n\n\t\t\t\tif ( pathwayFilter ) {\n\t\t\t\t\tobj[pathwayFilter.key] = pathwayName;\n\t\t\t\t}\n\n\t\t\t\tobj.fromSectorInfo = true;\n\n\t\t\t\treturn obj;\n\t\t\t} )();\n\n\t\t\tthis.$router.push( {\n\t\t\t\tpath : 'courses',\n\t\t\t\tquery,\n\t\t\t} );\n\t\t},\n\n\t\tgoBack() {\n\t\t\tthis.$router.push( 'cte' );\n\t\t}\n\t}\n\n};\n</script>\n\n<style lang=\"scss\">\n\t.sector-info\t{\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\n\t\t.side {\n\t\t\twidth : 350px;\n\t\t\theight: 100%;\n\t\t\toverflow: auto;\n\n\t\t\t.sector {\n\t\t\t\tmargin: 30px 15px;\n\n\t\t\t\t.title {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\talign-items: center;\n\n\t\t\t\t\th2 {\n\t\t\t\t\t\tcolor : $primary;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t}\n\n\t\t\t\t\timg, .no-icon {\n\t\t\t\t\t\theight: 100px;\n\t\t\t\t\t\twidth: 100px;\n\t\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\tmargin-bottom: 15px;\n\t\t\t\t\t}\n\n\t\t\t\t\tp {\n\t\t\t\t\t\tfont-size: 20px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.description {\n\t\t\t\t\tmargin: 25px 15px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.pathways {\n\t\t\t\toverflow: auto;\n\n\t\t\t\tp.header {\n\t\t\t\t\tmargin-left: 15px;\n\t\t\t\t\tmargin-bottom : 15px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tfont-size: 20px;\n\t\t\t\t\tcolor: $primary;\n\t\t\t\t}\n\n\t\t\t\t.pathway {\n\t\t\t\t\tborder-top: 1px solid $lightGrey;\n\t\t\t\t\tpadding : 20px 15px;\n\n\t\t\t\t\t&:last-child {\n\t\t\t\t\t\tborder-bottom: 1px solid $lightGrey;\n\t\t\t\t\t}\n\n\t\t\t\t\t.name {\n\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t}\n\n\t\t\t\t\t.pathway-options {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tmargin-top: 5px;\n\n\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t\tletter-spacing: 3px;\n\t\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.dot {\n\t\t\t\t\t\t\tmargin: 0px 10px;\n\t\t\t\t\t\t\twidth: 5px;\n\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\t\tbackground-color: $primary;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.pathway-description {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\tmargin-top: 20px;\n\n\t\t\t\t\t\t&.open {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.pdf-viewer {\n\t\t\theight: 100%;\n\t\t\tflex: 1 1 0;\n\t\t}\n\n\t\t.no-pdf {\n\t\t\tdisplay: flex;\n\t\t\theight: 100%;\n\t\t\tflex: 1 1 0;\n\t\t\tbackground :#d0d1db;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\n\t\t\th1 {\n\t\t\t\tcolor: $primary;\n\t\t\t\tfont-size: 36px;\n\t\t\t\tmargin-bottom: 15px;\n\t\t\t}\n\n\t\t\t.button {\n\t\t\t\tfont-size: 24px;\n\t\t\t}\n\t\t}\n\t}\n\n</style>\n"],"sourceRoot":"src/components"}]}