{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/course-catalog-v2/src/components/AddSectorModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/components/AddSectorModal.vue","mtime":1609282060283},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/brianphan/jets/course-catalog-v2/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FileUpload from '@/components/FileUpload';\nimport CustomDropdown from '@/components/CustomDropdown';\nimport { firebase, Ref, FirebaseKey } from '@/lib/db';\nexport default {\n  name: 'add-sector-modal',\n  props: {\n    activeSchoolKey: {\n      type: String\n    }\n  },\n  components: {\n    FileUpload: FileUpload,\n    CustomDropdown: CustomDropdown\n  },\n  data: function data() {\n    return {\n      file: null,\n      icon: null,\n      uploadProgress: 0\n    };\n  },\n  computed: {\n    isAdmin: function isAdmin() {\n      return this.$store.state.isAdmin;\n    },\n    state: function state() {\n      return this.$store.state.modalState;\n    },\n    modalStep: function modalStep() {\n      return this.$store.state.modalStep;\n    },\n    isEditing: function isEditing() {\n      return this.$store.state.isEditing;\n    },\n    newSector: function newSector() {\n      return this.$store.state.newSector;\n    },\n    titleOptions: function titleOptions() {\n      return {\n        options: this.getSectors,\n        defaultText: 'Select a Sector',\n        searchable: false\n      };\n    }\n  },\n  methods: {\n    getSectors: function () {\n      var _getSectors = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data, sectorKeys, formattedSectors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sectorKeys = [];\n                _context.next = 3;\n                return firebase.database().ref('cteSectors').once('value').then(function (snapshot) {\n                  data = snapshot.val();\n                  var keys = Object.keys(data);\n                  keys.forEach(function (key) {\n                    sectorKeys.push(key);\n                  });\n                });\n\n              case 3:\n                // we're going to through our sector keys and return\n                // a new array of the values from the sector keys by\n                // using the data variable\n                formattedSectors = sectorKeys.reduce(function (sectors, key) {\n                  var value = data[key].value;\n                  sectors.push({\n                    text: value,\n                    value: value\n                  });\n                  return sectors;\n                }, []);\n                return _context.abrupt(\"return\", formattedSectors);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getSectors() {\n        return _getSectors.apply(this, arguments);\n      }\n\n      return getSectors;\n    }(),\n    cancelSectorUpload: function cancelSectorUpload() {\n      this.$store.dispatch('closeSectorUpload');\n    },\n    uploadPDF: function uploadPDF(file) {\n      this.file = file;\n    },\n    uploadIcon: function uploadIcon(icon) {\n      this.icon = icon;\n    },\n    saveSector: function () {\n      var _saveSector = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var schoolKey, fileKey, file, iconKey, icon, uploadJobAsset, fileUrl, iconUrl, newSector;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.newSector.title) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.$store.dispatch('updateStore', ['modalStep', 'error']);\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.$store.dispatch('updateStore', ['modalStep', 'uploading']);\n                schoolKey = this.activeSchoolKey;\n                fileKey = FirebaseKey();\n                file = this.file;\n                iconKey = FirebaseKey();\n                icon = this.icon;\n\n                uploadJobAsset = function uploadJobAsset(asset, key) {\n                  var upload = firebase.storage().ref('/').child(schoolKey).child(key).put(asset);\n                  upload.on('state_changed', function (snapshot) {\n                    _this.uploadProgress = snapshot.bytesTransferred / snapshot.totalBytes;\n                  });\n                  return upload.then(function (snapshot) {\n                    return snapshot.ref.getDownloadURL();\n                  });\n                };\n\n                fileUrl = null;\n                iconUrl = null;\n\n                if (!file) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.next = 15;\n                return uploadJobAsset(file, fileKey);\n\n              case 15:\n                fileUrl = _context2.sent;\n\n              case 16:\n                if (!icon) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                _context2.next = 19;\n                return uploadJobAsset(icon, iconKey);\n\n              case 19:\n                iconUrl = _context2.sent;\n\n              case 20:\n                newSector = function () {\n                  var title = _this.newSector.title;\n                  var obj = {\n                    title: title\n                  };\n\n                  if (fileUrl) {\n                    obj.fileUrl = fileUrl;\n                    obj.fileKey = fileKey;\n                  }\n\n                  if (iconUrl) {\n                    obj.iconUrl = iconUrl;\n                    obj.iconKey = iconKey;\n                  }\n\n                  return obj;\n                }();\n\n                Ref.child('cte').child(schoolKey).child(newSector.title).update(newSector).then(function () {\n                  _this.$store.dispatch('updateStore', ['modalStep', 'finished']);\n\n                  window.setTimeout(function () {\n                    _this.cancelSectorUpload();\n                  }, 2000);\n                }).catch(function () {\n                  _this.$store.dispatch('updateStore', ['modalStep', 'failed']);\n                });\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function saveSector() {\n        return _saveSector.apply(this, arguments);\n      }\n\n      return saveSector;\n    }(),\n    editSector: function () {\n      var _editSector = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var schoolKey, sectorKey, fileUrl, iconUrl, fileKey, iconKey, uploadJobAsset, editedSector;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                schoolKey = this.activeSchoolKey;\n                sectorKey = this.newSector.key;\n                fileUrl = this.newSector.fileUrl || null;\n                iconUrl = this.newSector.iconUrl || null;\n                fileKey = this.newSector.fileKey || FirebaseKey();\n                iconKey = this.newSector.iconKey || FirebaseKey();\n                this.$store.dispatch('updateStore', ['modalStep', 'uploading']);\n\n                uploadJobAsset = function uploadJobAsset(asset, key) {\n                  var upload = firebase.storage().ref('/').child(schoolKey).child(key).put(asset);\n                  upload.on('state_changed', function (snapshot) {\n                    _this2.uploadProgress = snapshot.bytesTransferred / snapshot.totalBytes;\n                  });\n                  return upload.then(function (snapshot) {\n                    return snapshot.ref.getDownloadURL();\n                  });\n                };\n\n                if (!this.file) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                _context3.next = 11;\n                return uploadJobAsset(this.file, fileKey);\n\n              case 11:\n                fileUrl = _context3.sent;\n\n              case 12:\n                if (!this.icon) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 15;\n                return uploadJobAsset(this.icon, iconKey);\n\n              case 15:\n                iconUrl = _context3.sent;\n\n              case 16:\n                editedSector = function () {\n                  var title = _this2.newSector.title;\n                  var obj = {\n                    title: title\n                  };\n\n                  if (fileUrl) {\n                    obj.fileUrl = fileUrl;\n                    obj.fileKey = fileKey;\n                  }\n\n                  if (iconUrl) {\n                    obj.iconUrl = iconUrl;\n                    obj.iconKey = iconKey;\n                  }\n\n                  return obj;\n                }();\n\n                Ref.child('cte').child(schoolKey).child(sectorKey).update(editedSector).then(function () {\n                  _this2.$store.dispatch('updateStore', ['modalStep', 'finished']);\n\n                  window.setTimeout(function () {\n                    _this2.cancelSectorUpload();\n                  }, 2000);\n                }).catch(function () {\n                  _this2.$store.$dispatch('updateStore', ['modalStep', 'failed']);\n                });\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function editSector() {\n        return _editSector.apply(this, arguments);\n      }\n\n      return editSector;\n    }()\n  }\n};",{"version":3,"sources":["AddSectorModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,cAAA,MAAA,6BAAA;AACA,SAAA,QAAA,EAAA,GAAA,EAAA,WAAA,QAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAHA;AASA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,cAAA,EAAA;AAFA,GATA;AAcA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA;AAAA,GAdA;AAqBA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,KAHA;AAKA,IAAA,KALA,mBAKA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;AACA,KAPA;AASA,IAAA,SATA,uBASA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAXA;AAaA,IAAA,SAbA,uBAaA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAfA;AAiBA,IAAA,SAjBA,uBAiBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAnBA;AAqBA,IAAA,YArBA,0BAqBA;AACA,aAAA;AACA,QAAA,OAAA,EAAA,KAAA,UADA;AAEA,QAAA,WAAA,EAAA,iBAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OAAA;AAKA;AA3BA,GArBA;AAmDA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,gBAAA,UAJA,GAIA,EAJA;AAAA;AAAA,uBAMA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,YAAA,EACA,IADA,CACA,OADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,kBAAA,IAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,sBAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAEA,kBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,oBAAA,UAAA,CAAA,IAAA,CAAA,GAAA;AACA,mBAFA;AAGA,iBATA,CANA;;AAAA;AAiBA;AACA;AACA;AAEA,gBAAA,gBArBA,GAqBA,UAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA,GAAA,EAAA;AAAA,sBAEA,KAFA,GAEA,IAAA,CAAA,GAAA,CAFA,CAEA,KAFA;AAIA,kBAAA,OAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,KADA;AAEA,oBAAA,KAAA,EAAA;AAFA,mBAAA;AAKA,yBAAA,OAAA;AACA,iBAVA,EAUA,EAVA,CArBA;AAAA,iDAiCA,gBAjCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCA,IAAA,kBApCA,gCAoCA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,mBAAA;AACA,KAtCA;AAwCA,IAAA,SAxCA,qBAwCA,IAxCA,EAwCA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,KA1CA;AA4CA,IAAA,UA5CA,sBA4CA,IA5CA,EA4CA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,KA9CA;AAgDA,IAAA,UAhDA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAiDA,KAAA,SAAA,CAAA,KAjDA;AAAA;AAAA;AAAA;;AAkDA,qBAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA;AAlDA;;AAAA;AAsDA,qBAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,WAAA,CAAA;AAEA,gBAAA,SAxDA,GAwDA,KAAA,eAxDA;AAyDA,gBAAA,OAzDA,GAyDA,WAAA,EAzDA;AA0DA,gBAAA,IA1DA,GA0DA,IA1DA,CA0DA,IA1DA;AA4DA,gBAAA,OA5DA,GA4DA,WAAA,EA5DA;AA6DA,gBAAA,IA7DA,GA6DA,IA7DA,CA6DA,IA7DA;;AA+DA,gBAAA,cA/DA,GA+DA,SAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AAEA,sBAAA,MAAA,GAAA,QAAA,CAAA,OAAA,GACA,GADA,CACA,GADA,EAEA,KAFA,CAEA,SAFA,EAGA,KAHA,CAGA,GAHA,EAIA,GAJA,CAIA,KAJA,CAAA;AAMA,kBAAA,MAAA,CAAA,EAAA,CAAA,eAAA,EAAA,UAAA,QAAA,EAAA;AACA,oBAAA,KAAA,CAAA,cAAA,GAAA,QAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,UAAA;AACA,mBAFA;AAIA,yBAAA,MAAA,CAAA,IAAA,CAAA,UAAA,QAAA;AAAA,2BAAA,QAAA,CAAA,GAAA,CAAA,cAAA,EAAA;AAAA,mBAAA,CAAA;AACA,iBA5EA;;AA8EA,gBAAA,OA9EA,GA8EA,IA9EA;AA+EA,gBAAA,OA/EA,GA+EA,IA/EA;;AAAA,qBAkFA,IAlFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmFA,cAAA,CAAA,IAAA,EAAA,OAAA,CAnFA;;AAAA;AAmFA,gBAAA,OAnFA;;AAAA;AAAA,qBAsFA,IAtFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAuFA,cAAA,CAAA,IAAA,EAAA,OAAA,CAvFA;;AAAA;AAuFA,gBAAA,OAvFA;;AAAA;AA0FA,gBAAA,SA1FA,GA0FA,YAAA;AAAA,sBACA,KADA,GACA,KAAA,CAAA,SADA,CACA,KADA;AAGA,sBAAA,GAAA,GAAA;AACA,oBAAA,KAAA,EAAA;AADA,mBAAA;;AAIA,sBAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AAEA,sBAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AAEA,yBAAA,GAAA;AACA,iBAlBA,EA1FA;;AA8GA,gBAAA,GAAA,CAAA,KAAA,CAAA,KAAA,EACA,KADA,CACA,SADA,EAEA,KAFA,CAEA,SAAA,CAAA,KAFA,EAGA,MAHA,CAGA,SAHA,EAIA,IAJA,CAIA,YAAA;AAEA,kBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA;;AAEA,kBAAA,MAAA,CAAA,UAAA,CAAA,YAAA;AACA,oBAAA,KAAA,CAAA,kBAAA;AACA,mBAFA,EAEA,IAFA;AAIA,iBAZA,EAaA,KAbA,CAaA,YAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACA,iBAfA;;AA9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiIA,IAAA,UAjIA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkIA,gBAAA,SAlIA,GAkIA,KAAA,eAlIA;AAmIA,gBAAA,SAnIA,GAmIA,KAAA,SAAA,CAAA,GAnIA;AAqIA,gBAAA,OArIA,GAqIA,KAAA,SAAA,CAAA,OAAA,IAAA,IArIA;AAsIA,gBAAA,OAtIA,GAsIA,KAAA,SAAA,CAAA,OAAA,IAAA,IAtIA;AAuIA,gBAAA,OAvIA,GAuIA,KAAA,SAAA,CAAA,OAAA,IAAA,WAAA,EAvIA;AAwIA,gBAAA,OAxIA,GAwIA,KAAA,SAAA,CAAA,OAAA,IAAA,WAAA,EAxIA;AA0IA,qBAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,WAAA,CAAA;;AAEA,gBAAA,cA5IA,GA4IA,SAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AAEA,sBAAA,MAAA,GAAA,QAAA,CAAA,OAAA,GACA,GADA,CACA,GADA,EAEA,KAFA,CAEA,SAFA,EAGA,KAHA,CAGA,GAHA,EAIA,GAJA,CAIA,KAJA,CAAA;AAMA,kBAAA,MAAA,CAAA,EAAA,CAAA,eAAA,EAAA,UAAA,QAAA,EAAA;AACA,oBAAA,MAAA,CAAA,cAAA,GAAA,QAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,UAAA;AACA,mBAFA;AAIA,yBAAA,MAAA,CAAA,IAAA,CAAA,UAAA,QAAA;AAAA,2BAAA,QAAA,CAAA,GAAA,CAAA,cAAA,EAAA;AAAA,mBAAA,CAAA;AACA,iBAzJA;;AAAA,qBA2JA,KAAA,IA3JA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA4JA,cAAA,CAAA,KAAA,IAAA,EAAA,OAAA,CA5JA;;AAAA;AA4JA,gBAAA,OA5JA;;AAAA;AAAA,qBA+JA,KAAA,IA/JA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgKA,cAAA,CAAA,KAAA,IAAA,EAAA,OAAA,CAhKA;;AAAA;AAgKA,gBAAA,OAhKA;;AAAA;AAmKA,gBAAA,YAnKA,GAmKA,YAAA;AAAA,sBACA,KADA,GACA,MAAA,CAAA,SADA,CACA,KADA;AAGA,sBAAA,GAAA,GAAA;AACA,oBAAA,KAAA,EAAA;AADA,mBAAA;;AAIA,sBAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AAEA,sBAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA,oBAAA,GAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AAEA,yBAAA,GAAA;AACA,iBAlBA,EAnKA;;AAuLA,gBAAA,GAAA,CAAA,KAAA,CAAA,KAAA,EACA,KADA,CACA,SADA,EAEA,KAFA,CAEA,SAFA,EAGA,MAHA,CAGA,YAHA,EAIA,IAJA,CAIA,YAAA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA;;AAEA,kBAAA,MAAA,CAAA,UAAA,CAAA,YAAA;AACA,oBAAA,MAAA,CAAA,kBAAA;AACA,mBAFA,EAEA,IAFA;AAGA,iBAVA,EAWA,KAXA,CAWA,YAAA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,aAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACA,iBAbA;;AAvLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnDA,CAAA","sourcesContent":["<template lang=\"pug\">\n#add-sector-modal\n\t.modal-container(:class='{ active : state === \"add-sector\" }' @click.self='cancelSectorUpload')\n\t\t.modal-wrapper(:class='modalStep')\n\t\t\t.progress-indicators\n\t\t\t\t.progress-bar(v-bind:style='{ transform : `scale(${uploadProgress}, 1)` }')\n\t\t\t\t.loading-circles\n\t\t\t\t\tspan\n\t\t\t\t\tspan\n\t\t\t\t\tspan\n\t\t\t\t.check.active\n\t\t\t\t.failure\n\t\t\t\t\t.failed\n\t\t\t\t\t.text Failed to Upload\n\t\t\tp.spacey {{ isEditing ? 'Edit' : 'Create a New' }} Sector\n\t\t\tcustom-dropdown.sector-dropdown(\n\t\t\t\tv-model='newSector.title'\n\t\t\t\t:options='titleOptions'\n\t\t\t)\n\t\t\t.row\n\t\t\t\t.file-input\n\t\t\t\t\tp.label {{ isEditing ? 'Edit' : 'Upload' }} PDF\n\t\t\t\t\tfile-upload(\n\t\t\t\t\t\tv-show='isAdmin'\n\t\t\t\t\t\t@file='uploadPDF'\n\t\t\t\t\t\t:allowed-ext='[\"pdf\"]'\n\t\t\t\t\t\t:emit-immediately='true'\n\t\t\t\t\t\t:reset='state == \"browse\"'\n\t\t\t\t\t\t:id='\"cte-upload\"'\n\t\t\t\t\t\t:preview='newSector.fileUrl'\n\t\t\t\t\t)\n\t\t\t\t.file-input\n\t\t\t\t\tp.label {{ isEditing ? 'Edit' : 'Upload' }} Logo\n\t\t\t\t\tfile-upload(\n\t\t\t\t\t\tv-show='isAdmin'\n\t\t\t\t\t\t@file='uploadIcon'\n\t\t\t\t\t\t:allowed-ext='[\"png\", \"jpg\", \"jpeg\"]'\n\t\t\t\t\t\t:emit-immediately='true'\n\t\t\t\t\t\t:reset='state == \"browse\"'\n\t\t\t\t\t\t:preview='newSector.iconUrl'\n\t\t\t\t\t)\n\t\t\t.buttons\n\t\t\t\t.button.no-bg(@click='cancelSectorUpload') cancel\n\t\t\t\t.button(@click='() => { if ( isEditing ) { editSector() } else { saveSector() } }') save\n\t\t\t.error-message Please select a sector\n</template>\n\n<script>\nimport FileUpload from '@/components/FileUpload';\nimport CustomDropdown from '@/components/CustomDropdown';\nimport { firebase, Ref, FirebaseKey } from '@/lib/db';\n\nexport default {\n\tname : 'add-sector-modal',\n\n\tprops : {\n\t\tactiveSchoolKey : {\n\t\t\ttype : String,\n\t\t}\n\t},\n\n\tcomponents : {\n\t\tFileUpload,\n\t\tCustomDropdown,\n\t},\n\n\tdata : () => ( {\n\t\tfile           : null,\n\t\ticon           : null,\n\t\tuploadProgress : 0,\n\n\t} ),\n\n\tcomputed : {\n\t\tisAdmin() {\n\t\t\treturn this.$store.state.isAdmin;\n\t\t},\n\n\t\tstate() {\n\t\t\treturn this.$store.state.modalState;\n\t\t},\n\n\t\tmodalStep() {\n\t\t\treturn this.$store.state.modalStep;\n\t\t},\n\n\t\tisEditing() {\n\t\t\treturn this.$store.state.isEditing;\n\t\t},\n\n\t\tnewSector() {\n\t\t\treturn this.$store.state.newSector;\n\t\t},\n\n\t\ttitleOptions() {\n\t\t\treturn {\n\t\t\t\toptions     : this.getSectors,\n\t\t\t\tdefaultText : 'Select a Sector',\n\t\t\t\tsearchable  : false,\n\t\t\t};\n\t\t},\n\t},\n\n\tmethods : {\n\t\tasync getSectors() {\n\t\t\tlet data;\n\n\t\t\tconst sectorKeys = [];\n\n\t\t\tawait firebase.database().ref( 'cteSectors' )\n\t\t\t\t.once( 'value' )\n\t\t\t\t.then( ( snapshot ) => {\n\t\t\t\t\tdata = snapshot.val();\n\t\t\t\t\tconst keys = Object.keys( data );\n\n\t\t\t\t\tkeys.forEach( ( key ) => {\n\t\t\t\t\t\tsectorKeys.push( key );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t// we're going to through our sector keys and return\n\t\t\t// a new array of the values from the sector keys by\n\t\t\t// using the data variable\n\n\t\t\tconst formattedSectors = sectorKeys.reduce( ( sectors, key ) => {\n\n\t\t\t\tconst { value } = data[key];\n\n\t\t\t\tsectors.push( {\n\t\t\t\t\ttext : value,\n\t\t\t\t\tvalue\n\t\t\t\t} );\n\n\t\t\t\treturn sectors;\n\t\t\t}, [] );\n\n\t\t\treturn formattedSectors;\n\t\t},\n\n\t\tcancelSectorUpload() {\n\t\t\tthis.$store.dispatch( 'closeSectorUpload' );\n\t\t},\n\n\t\tuploadPDF( file ) {\n\t\t\tthis.file = file;\n\t\t},\n\n\t\tuploadIcon( icon ) {\n\t\t\tthis.icon = icon;\n\t\t},\n\n\t\tasync saveSector() {\n\t\t\tif ( !this.newSector.title ) {\n\t\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'error'] );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'uploading'] );\n\n\t\t\tconst schoolKey = this.activeSchoolKey;\n\t\t\tconst fileKey   = FirebaseKey();\n\t\t\tconst { file }  = this;\n\n\t\t\tconst iconKey = FirebaseKey();\n\t\t\tconst { icon } = this;\n\n\t\t\tconst uploadJobAsset = ( asset, key ) => {\n\n\t\t\t\tconst upload = firebase.storage()\n\t\t\t\t\t.ref( '/' )\n\t\t\t\t\t.child( schoolKey )\n\t\t\t\t\t.child( key )\n\t\t\t\t\t.put( asset );\n\n\t\t\t\tupload.on( 'state_changed', ( snapshot ) => {\n\t\t\t\t\tthis.uploadProgress = ( snapshot.bytesTransferred / snapshot.totalBytes );\n\t\t\t\t} );\n\n\t\t\t\treturn upload.then( snapshot => snapshot.ref.getDownloadURL() );\n\t\t\t};\n\n\t\t\tlet fileUrl  = null;\n\t\t\tlet iconUrl  = null;\n\n\n\t\t\tif ( file ) {\n\t\t\t\tfileUrl = await uploadJobAsset( file, fileKey );\n\t\t\t}\n\n\t\t\tif ( icon ) {\n\t\t\t\ticonUrl = await uploadJobAsset( icon, iconKey );\n\t\t\t}\n\n\t\t\tconst newSector = ( () => {\n\t\t\t\tconst { title } = this.newSector;\n\n\t\t\t\tconst obj = {\n\t\t\t\t\ttitle,\n\t\t\t\t};\n\n\t\t\t\tif ( fileUrl ) {\n\t\t\t\t\tobj.fileUrl = fileUrl;\n\t\t\t\t\tobj.fileKey = fileKey;\n\t\t\t\t}\n\n\t\t\t\tif ( iconUrl ) {\n\t\t\t\t\tobj.iconUrl = iconUrl;\n\t\t\t\t\tobj.iconKey = iconKey;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t} )();\n\n\t\t\tRef.child( 'cte' )\n\t\t\t\t.child( schoolKey )\n\t\t\t\t.child( newSector.title )\n\t\t\t\t.update( newSector )\n\t\t\t\t.then( () => {\n\n\t\t\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'finished'] );\n\n\t\t\t\t\twindow.setTimeout( () => {\n\t\t\t\t\t\tthis.cancelSectorUpload();\n\t\t\t\t\t}, 2000 );\n\n\t\t\t\t} )\n\t\t\t\t.catch( () => {\n\t\t\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'failed'] );\n\t\t\t\t} );\n\n\t\t},\n\n\t\tasync editSector() {\n\t\t\tconst schoolKey = this.activeSchoolKey;\n\t\t\tconst sectorKey = this.newSector.key;\n\n\t\t\tlet fileUrl = this.newSector.fileUrl || null;\n\t\t\tlet iconUrl = this.newSector.iconUrl || null;\n\t\t\tconst fileKey = this.newSector.fileKey || FirebaseKey();\n\t\t\tconst iconKey = this.newSector.iconKey || FirebaseKey();\n\n\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'uploading'] );\n\n\t\t\tconst uploadJobAsset = ( asset, key ) => {\n\n\t\t\t\tconst upload = firebase.storage()\n\t\t\t\t\t.ref( '/' )\n\t\t\t\t\t.child( schoolKey )\n\t\t\t\t\t.child( key )\n\t\t\t\t\t.put( asset );\n\n\t\t\t\tupload.on( 'state_changed', ( snapshot ) => {\n\t\t\t\t\tthis.uploadProgress = ( snapshot.bytesTransferred / snapshot.totalBytes );\n\t\t\t\t} );\n\n\t\t\t\treturn upload.then( snapshot => snapshot.ref.getDownloadURL() );\n\t\t\t};\n\n\t\t\tif ( this.file ) {\n\t\t\t\tfileUrl = await uploadJobAsset( this.file, fileKey );\n\t\t\t}\n\n\t\t\tif ( this.icon ) {\n\t\t\t\ticonUrl = await uploadJobAsset( this.icon, iconKey );\n\t\t\t}\n\n\t\t\tconst editedSector = ( () => {\n\t\t\t\tconst { title } = this.newSector;\n\n\t\t\t\tconst obj = {\n\t\t\t\t\ttitle,\n\t\t\t\t};\n\n\t\t\t\tif ( fileUrl ) {\n\t\t\t\t\tobj.fileUrl = fileUrl;\n\t\t\t\t\tobj.fileKey = fileKey;\n\t\t\t\t}\n\n\t\t\t\tif ( iconUrl ) {\n\t\t\t\t\tobj.iconUrl = iconUrl;\n\t\t\t\t\tobj.iconKey = iconKey;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t} )();\n\n\t\t\tRef.child( 'cte' )\n\t\t\t\t.child( schoolKey )\n\t\t\t\t.child( sectorKey )\n\t\t\t\t.update( editedSector )\n\t\t\t\t.then( ( ) => {\n\t\t\t\t\tthis.$store.dispatch( 'updateStore', ['modalStep', 'finished'] );\n\n\t\t\t\t\twindow.setTimeout( () => {\n\t\t\t\t\t\tthis.cancelSectorUpload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t} )\n\t\t\t\t.catch( () => {\n\t\t\t\t\tthis.$store.$dispatch( 'updateStore', ['modalStep', 'failed'] );\n\t\t\t\t} );\n\n\t\t},\n\n\t}\n};\n</script>\n\n<style lang=\"scss\">\n#add-sector-modal {\n\t.modal-container {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(255,255,255,0.5);\n\t\topacity: 0;\n\t\ttransition: opacity 0.4s ease;\n\t\tpointer-events: none;\n\t\tz-index: 10;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twill-change: opacity;\n\n\t\t&.active {\n\t\t\topacity: 1;\n\t\t\tpointer-events: all;\n\n\t\t\t.modal-wrapper {\n\t\t\t\ttransform: scale( 1, 1 );\n\n\t\t\t\t.buttons .button {\n\t\t\t\t\tpointer-events: all;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.modal-wrapper {\n\t\t\tmax-width: 700px;\n\t\t\tmax-height: 90vh;\n\t\t\ttransform: scale(0.8,0.8);\n\t\t\ttransition: transform 0.4s ease;\n\t\t\tpadding: 25px;\n\t\t\tborder-radius: 10px;\n\t\t\tbox-shadow: $floatingObject;\n\t\t\tbackground: white;\n\t\t\tposition: relative;\n\t\t\twidth: 80%;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\toverflow: hidden scroll;\n\t\t\twill-change: transition;\n\n\t\t\t&.error {\n\n\t\t\t\t.buttons {\n\t\t\t\t\ttransform: translate3d(0, 0px, 0 );\n\t\t\t\t}\n\n\t\t\t\t.error-message {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.uploading,\n\t\t\t&.finished,\n\t\t\t&.failed {\n\n\t\t\t\t.progress-indicators {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.finished {\n\n\t\t\t\t.progress-indicators {\n\n\t\t\t\t\t.loading-circles {\n\t\t\t\t\t\topacity: 0;\n\t\t\t\t\t\ttransform: translate3d(-50%,calc(-50% - 30px),0);\n\t\t\t\t\t}\n\n\t\t\t\t\t.check {\n\t\t\t\t\t\topacity: 1 !important;\n\t\t\t\t\t\ttransform: translate3d(-50%,-50%,0) scale(3,3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.failed {\n\n\t\t\t\t.progress-indicators {\n\n\t\t\t\t\t.loading-circles {\n\t\t\t\t\t\topacity: 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t.failure {\n\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\ttransform: translate3d(-50%,-50%,0) scale(3,3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.progress-indicators {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbackground: white;\n\t\t\t\tpointer-events: none;\n\t\t\t\topacity: 0;\n\t\t\t\tz-index: 100 !important;\n\n\t\t\t\t.loading-circles,\n\t\t\t\t.check,\n\t\t\t\t.failure {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttransform: translate3d(-50%,-50%, 0);\n\t\t\t\t\ttransition: transform 0.5s ease, opacity 0.5s ease;\n\t\t\t\t}\n\n\t\t\t\t.check {\n\t\t\t\t\topacity: 0;\n\t\t\t\t\ttransform: translate3d(-50%,calc(-50% + 50px), 0) scale( 3, 3 );\n\t\t\t\t}\n\n\t\t\t\t.failure {\n\t\t\t\t\ttransform: translate3d(-50%,calc(-50% + 50px), 0) scale(1,1);\n\t\t\t\t\topacity: 0;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\talign-items: center;\n\n\t\t\t\t\t.failed {\n\t\t\t\t\t\theight: 30px;\n\t\t\t\t\t\twidth: 30px;\n\t\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\tbackground: $cancel;\n\t\t\t\t\t\tposition: relative;\n\n\t\t\t\t\t\t&::before,\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: ' ';\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\ttop: 50%;\n\t\t\t\t\t\t\tleft: 50%;\n\t\t\t\t\t\t\theight: 20px;\n\t\t\t\t\t\t\twidth: 4px;\n\t\t\t\t\t\t\tborder-radius: 2px;\n\t\t\t\t\t\t\tbackground: white;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&::before {\n\t\t\t\t\t\t\ttransform: translate(-50%,-50%) rotate(45deg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\ttransform: translate(-50%,-50%) rotate(-45deg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.text {\n\t\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t\t\tfont-size: 6px;\n\t\t\t\t\t\tcolor: $cancel;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.progress-bar {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tbackground: $secondary;\n\t\t\t\t\ttransition: transform 0.2s ease;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.spacey {\n\t\t\t\tpadding-bottom: 10px;\n\t\t\t\tborder-bottom: 1px solid $lightGrey;\n\t\t\t}\n\n\t\t\t.sector-dropdown {\n\t\t\t\tz-index: 11!important;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-top: 15px;\n\n\t\t\t\t.select-display {\n\t\t\t\t\tz-index: 2;\n\n\t\t\t\t\tp {\n\t\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\t\t&.minimal-label {\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t> p {\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t.input {\n\t\t\t\tmargin: 40px 0;\n\n\t\t\t\t.input-label {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcolor: $primary;\n\t\t\t\t\ttransform: translate3d(0,100%,0);\n\t\t\t\t\topacity: 0;\n\t\t\t\t\ttransition: transform 0.2s ease, opacity 0.2s ease;\n\t\t\t\t\tpointer-events: none;\n\n\t\t\t\t\t&.active {\n\t\t\t\t\t\ttransform: translate3d(0,0,0);\n\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinput {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tfont-weight: 400;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.row {\n\t\t\t\talign-items: center;\n\t\t\t\tmargin: 10px 0;\n\n\t\t\t\t.file-input {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tflex: 1 1 0;\n\n\t\t\t\t\tp.label {\n\t\t\t\t\t\tcolor: $primary;\n\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t}\n\n\t\t\t\t\t.file-upload {\n\n\t\t\t\t\t\t&.error {\n\n\t\t\t\t\t\t\t.file {\n\t\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\t\tcolor: $cancel !important;\n\t\t\t\t\t\t\t\tborder: 2px solid $cancel !important;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.button {\n\t\t\t\t\t\t\tdisplay: none !important;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.drop-zone {\n\t\t\t\t\t\t\tpadding: 20px;\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\tflex-direction: row-reverse;\n\t\t\t\t\t\t\tflex-wrap: wrap;\n\n\t\t\t\t\t\t\t.upload-button {\n\t\t\t\t\t\t\t\tpadding: 15px;\n\t\t\t\t\t\t\t\tborder-radius: 30px;\n\t\t\t\t\t\t\t\tborder: 2px solid $primary;\n\t\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t\t\tbackground: transparent;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t.file {\n\t\t\t\t\t\t\t\toverflow: hidden;\n\n\t\t\t\t\t\t\t\tp {\n\t\t\t\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t.upload-button,\n\t\t\t\t\t\t\t.no-file p,\n\t\t\t\t\t\t\t.file,\n\t\t\t\t\t\t\t.error-msg p {\n\t\t\t\t\t\t\t\tcolor: $primary;\n\t\t\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t\t\t\tletter-spacing: 5px;\n\t\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t.error-msg p {\n\t\t\t\t\t\t\t\tcolor: $cancel !important;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t.file,\n\t\t\t\t\t\t\t.error-msg {\n\t\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\t\tmargin-left: 15px;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t.no-file {\n\n\t\t\t\t\t\t\t\tp {\n\t\t\t\t\t\t\t\t\tmargin-left: 15px;\n\n\t\t\t\t\t\t\t\t\t&::before {\n\t\t\t\t\t\t\t\t\t\tcontent: 'or ';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t&:nth-child(2) {\n\t\t\t\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tcolor: $primary;\n\n\t\t\t\t\t\t\t&.error {\n\t\t\t\t\t\t\t\tcolor: $cancel;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t> *:not(.file-upload) {\n\t\t\t\tz-index: 10;\n\t\t\t}\n\n\t\t\t.buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: flex-end;\n\t\t\t\tjustify-content: center;\n\t\t\t\tpointer-events: none;\n\t\t\t\ttransform: translate3d(0,20px,0);\n\t\t\t\ttransition: transform 0.2s ease;\n\n\t\t\t\t.button {\n\t\t\t\t\tborder-radius: 30px;\n\t\t\t\t\tmargin: 0 15px;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tletter-spacing: 3px;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tpadding: 15px;\n\n\t\t\t\t\t&.no-bg {\n\t\t\t\t\t\tbackground: transparent;\n\t\t\t\t\t\tcolor: $grey;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.error-message {\n\t\t\t\tcolor: $cancel;\n\t\t\t\topacity: 0;\n\t\t\t\ttransition: opacity 0.2s ease;\n\t\t\t\ttext-align: center;\n\t\t\t\tpointer-events: none;\n\t\t\t\tmargin-top: 10px;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n"],"sourceRoot":"src/components"}]}