{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/course-catalog-v2/node_modules/eslint-loader/index.js??ref--12-0!/Users/brianphan/jets/course-catalog-v2/src/lib/API.js","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/lib/API.js","mtime":1609282060287},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/brianphan/jets/course-catalog-v2/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport env from '@/assets/env';\nimport { GetCurrentUserToken } from '@/lib/db/auth';\n\nvar path = function path(a) {\n  var queryOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var query = function () {\n    if (!queryOptions) {\n      return '';\n    }\n\n    var queryKeys = Object.keys(queryOptions);\n    var queryString = queryKeys.map(function (key) {\n      return \"\".concat(key, \"=\").concat(encodeURIComponent(queryOptions[key]));\n    }).join('&');\n    return \"?\".concat(queryString);\n  }();\n\n  return \"\".concat(env.API_PROTOCOL, \"://\").concat(env.API_URL, \"/\").concat(a).concat(query);\n};\n/**\n * a courier function which will run\n * it's first paramater as a callback\n * with a Firebase AuthToken added in\n * at the beginning of the paramaters\n * list\n *\n * @param method (function) the method to be called after a token is generated\n */\n\n\nvar authenticate = function authenticate(method) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return GetCurrentUserToken().then(function (token) {\n      var authObject = {\n        token: token,\n        defaultHeaders: new Headers({\n          'Auth-Token': token,\n          'Content-Type': 'application/json'\n        })\n      };\n      var allArgs = [authObject].concat(args);\n      return method.apply(void 0, _toConsumableArray(allArgs));\n    });\n  };\n}; // simply uses a try/catch block to\n// ensure standard behaviors on\n// fetch\n\n\nvar fetchPromise = function fetchPromise(route, options) {\n  return new Promise(function (resolve, reject) {\n    try {\n      fetch(route, options).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var status, body;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  status = parseInt(res.status, 10);\n\n                  if (!(Math.floor(status / 100) * 100 !== 200)) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  reject(res);\n                  return _context.abrupt(\"return\");\n\n                case 4:\n                  _context.next = 6;\n                  return _body(res);\n\n                case 6:\n                  body = _context.sent;\n                  resolve(body, res);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar _body =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(res) {\n    var text, firstChar, isJson;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return res.text();\n\n          case 2:\n            text = _context2.sent;\n            firstChar = text.charAt(0);\n            isJson = firstChar === '{' || firstChar === '[';\n\n            if (!isJson) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", JSON.parse(text));\n\n          case 7:\n            return _context2.abrupt(\"return\", text);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function _body(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var Upload = authenticate(function (_auth) {\n  return fetchPromise(path('sheets/upload'), {\n    method: 'POST',\n    headers: _auth.defaultHeaders\n  });\n});\nexport var Search = function Search(query) {\n  return fetchPromise(path('catalog/search', {\n    searchQuery: query\n  }), {\n    method: 'GET',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  });\n};",{"version":3,"sources":["/Users/brianphan/jets/course-catalog-v2/src/lib/API.js"],"names":["env","GetCurrentUserToken","path","a","queryOptions","query","queryKeys","Object","keys","queryString","map","key","encodeURIComponent","join","API_PROTOCOL","API_URL","authenticate","method","args","then","token","authObject","defaultHeaders","Headers","allArgs","concat","fetchPromise","route","options","Promise","resolve","reject","fetch","res","status","parseInt","Math","floor","_body","body","e","text","firstChar","charAt","isJson","JSON","parse","Upload","_auth","headers","Search","searchQuery"],"mappings":"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","sourcesContent":["import env from '@/assets/env';\nimport { GetCurrentUserToken } from '@/lib/db/auth';\n\nconst path = ( a, queryOptions = null ) => {\n\tconst query = ( () => {\n\t\tif ( !queryOptions ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst queryKeys   = Object.keys( queryOptions );\n\t\tconst queryString = queryKeys\n\t\t\t.map( key => `${key}=${encodeURIComponent( queryOptions[key] )}` )\n\t\t\t.join( '&' );\n\n\t\treturn `?${queryString}`;\n\t} )();\n\n\treturn `${env.API_PROTOCOL}://${env.API_URL}/${a}${query}`;\n};\n\n/**\n * a courier function which will run\n * it's first paramater as a callback\n * with a Firebase AuthToken added in\n * at the beginning of the paramaters\n * list\n *\n * @param method (function) the method to be called after a token is generated\n */\nconst authenticate = method => ( ...args ) => {\n\treturn GetCurrentUserToken()\n\t\t.then( ( token ) => {\n\t\t\tconst authObject = {\n\t\t\t\ttoken,\n\t\t\t\tdefaultHeaders : new Headers( {\n\t\t\t\t\t'Auth-Token'   : token,\n\t\t\t\t\t'Content-Type' : 'application/json',\n\t\t\t\t} ),\n\t\t\t};\n\t\t\tconst allArgs = [authObject].concat( args );\n\n\t\t\treturn method( ...allArgs );\n\t\t} );\n};\n\n// simply uses a try/catch block to\n// ensure standard behaviors on\n// fetch\nconst fetchPromise = ( route, options ) => new Promise( ( resolve, reject ) => {\n\ttry {\n\t\tfetch( route, options )\n\t\t\t.then( async ( res ) => {\n\t\t\t\tconst status = parseInt( res.status, 10 );\n\n\t\t\t\tif ( ( Math.floor( status / 100 ) * 100 ) !== 200 ) {\n\t\t\t\t\treject( res );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst body = await _body( res );\n\t\t\t\tresolve( body, res );\n\t\t\t} );\n\t}\n\tcatch ( e ) {\n\t\treject( e );\n\t}\n} );\n\nconst _body = async ( res ) => {\n\tconst text = await res.text();\n\n\tconst firstChar = text.charAt( 0 );\n\tconst isJson    = ( firstChar === '{' || firstChar === '[' );\n\n\tif ( isJson ) {\n\t\treturn JSON.parse( text );\n\t}\n\n\treturn text;\n};\n\nexport const Upload = authenticate( _auth => fetchPromise( path( 'sheets/upload' ), {\n\tmethod  : 'POST',\n\theaders : _auth.defaultHeaders\n} ) );\n\nexport const Search = query => fetchPromise( path( 'catalog/search', { searchQuery : query } ), {\n\tmethod  : 'GET',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n"]}]}