{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/course-catalog-v2/src/components/UserSwiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/components/UserSwiper.vue","mtime":1609282060287},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\nimport { Ref } from '@/lib/db';\nexport default {\n  name: 'user-swiper',\n  data: function data() {\n    return {\n      swiper: null,\n      uid: null,\n      providers: [// {\n      // \tname : 'twitter',\n      // \tid   : 'twitter.com',\n      // \ticon : 'twitter.svg',\n      // },\n      {\n        name: 'google',\n        id: 'google.com',\n        icon: 'google.svg'\n      } // {\n      // \tname : 'facebook',\n      // \tid   : 'facebook.com',\n      // \ticon : 'facebook.svg',\n      // },\n      ],\n      standalone: false,\n      loginState: 'sign-in',\n      email: '',\n      name: '',\n      password: '',\n      type: 'password',\n      error: ''\n    };\n  },\n  computed: {\n    state: function state() {\n      return this.$store.state.userSwiperState;\n    },\n    user: function user() {\n      return this.$store.state.user;\n    }\n  },\n  watch: {\n    state: function state(_state, oldState) {\n      if (oldState === _state) {\n        return;\n      }\n\n      if (_state === 'open' && this.swiper) {\n        this.swiper.slideTo(1);\n      }\n\n      if (_state === 'closed') {\n        this.swiper.slideTo(0);\n      }\n    },\n    loginState: function loginState() {\n      this.error = '';\n    },\n    email: function email() {\n      this.error = '';\n    },\n    password: function password() {\n      this.error = '';\n    }\n  },\n\n  /* life cycle */\n  created: function created() {\n    var _this = this;\n\n    // providers from firebase\n    var providers = {\n      'twitter.com': new firebase.auth.TwitterAuthProvider(),\n      'facebook.com': new firebase.auth.FacebookAuthProvider(),\n      'google.com': new firebase.auth.GoogleAuthProvider()\n    }; // when page reloads check\n    // if this was a redirect\n    // from a previous auth\n\n    firebase.auth().getRedirectResult().then(this.saveUser) // store user\n    .catch(function (error) {\n      // maybe they already have an account on another provider\n      if (error.code === 'auth/account-exists-with-different-credential') {\n        var credential = error.credential,\n            email = error.email;\n        firebase.auth().fetchProvidersForEmail(email).then(function (methods) {\n          var method = methods[0];\n          return _this.signInWith(method);\n        }).then(function (result) {\n          var user = result.user;\n          user.linkAndRetrieveDataWithCredential(credential).then(_this.saveUser);\n        });\n      }\n    });\n  },\n  mounted: function mounted() {\n    this.init(); // this.standalone = Browser.isSafari && window.navigator.standalone;\n  },\n  methods: {\n    init: function init() {\n      var self = this;\n      var swiperWrapper = this.$refs.swiperWrapper;\n      this.swiper = new Swiper(swiperWrapper, {\n        // eslint-disable-line\n        // auto initialize this swiper\n        init: true,\n        initialSlide: 0,\n        // swiper settings\n        slidesPerView: 'auto',\n        // don't force every slide to be 100vw\n        speed: 400,\n        // ms for when you let go of swipe\n        spaceBetween: 0,\n        // no space between\n        resistanceRatio: 0,\n        // stops you from swiping past all slides\n        direction: 'horizontal',\n        threshold: 50,\n        // min distance for scroll to work\n        on: {\n          init: function init() {\n            self.activeSlide = this.activeIndex;\n          },\n          slideChangeTransitionEnd: function slideChangeTransitionEnd() {\n            self.activeSlide = this.activeIndex;\n          }\n        }\n      });\n    },\n    close: function close() {\n      this.$store.dispatch('updateStore', ['userSwiperState', 'closed']);\n    },\n\n    /* sign in */\n    signInWith: function signInWith(id) {\n      var providers = {\n        'twitter.com': new firebase.auth.TwitterAuthProvider(),\n        'facebook.com': new firebase.auth.FacebookAuthProvider(),\n        'google.com': new firebase.auth.GoogleAuthProvider()\n      };\n      var provider = providers[id]; // mobile sign in\n\n      if (window.innerWidth <= 768) {\n        return firebase.auth().signInWithRedirect(provider);\n        /* *\n         * the rest of the logic for this\n         * is in the created block of this\n         * view model. this function requires\n         * a page reload\n         */\n      } // desktop sign in\n\n\n      return firebase.auth().signInWithPopup(provider).then(this.saveUser).catch(this.handleAuthFailure);\n    },\n    handleAuthFailure: function handleAuthFailure(error) {\n      var _this2 = this;\n\n      if (error.code === 'auth/account-exists-with-different-credential') {\n        var credential = error.credential,\n            email = error.email;\n        return firebase.auth().fetchProvidersForEmail(email).then(function (methods) {\n          // sign in with proper provider\n          var method = methods[0];\n          return _this2.signInWith(method);\n        }).then(function (result) {\n          // link the accounts\n          var user = result.user;\n          user.linkAndRetrieveDataWithCredential(credential).then(_this2.saveUser); // does this happen with a mobile sign in ?\n        });\n      }\n\n      return '';\n    },\n    saveUser: function saveUser(result) {\n      var user = result.user,\n          additionalUserInfo = result.additionalUserInfo;\n      var profile = additionalUserInfo.profile;\n      var providerId = additionalUserInfo.providerId;\n      var userInfo = {\n        name: user.displayName,\n        email: user.email\n      };\n\n      switch (providerId) {\n        case 'twitter.com':\n          Object.assign(userInfo, {\n            provider: providerId,\n            photoURL: profile.profile_image_url,\n            screenName: profile.screen_name\n          });\n          break;\n\n        case 'facebook.com':\n          Object.assign(userInfo, {\n            provider: providerId,\n            photoURL: profile.picture.data.url,\n            screenName: profile.email\n          });\n          break;\n\n        case 'google.com':\n          Object.assign(userInfo, {\n            provider: providerId,\n            photoURL: profile.picture,\n            screenName: profile.email\n          });\n          break;\n\n        default:\n          console.log(\"\".concat(providerId, \" is not a provider\"));\n          break;\n      }\n\n      return Ref.child('users').child(user.uid).update(userInfo);\n    },\n    signOut: function signOut() {\n      var _this3 = this;\n\n      firebase.auth().signOut().then(function () {\n        return _this3.close();\n      });\n    },\n    loginAction: function loginAction() {\n      var state = this.loginState;\n\n      if (state === 'register') {\n        this.registerWithEmail();\n        return;\n      }\n\n      this.signInWithEmail();\n    },\n    signInWithEmail: function signInWithEmail() {\n      var _this4 = this;\n\n      var email = this.email,\n          password = this.password;\n      this.error = '';\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {}).catch(function (err) {\n        _this4.error = err.message;\n        console.log(err);\n      });\n    },\n    registerWithEmail: function registerWithEmail() {\n      var _this5 = this;\n\n      var email = this.email,\n          password = this.password,\n          name = this.name;\n\n      if (!this.validateRegister()) {\n        return;\n      }\n\n      this.error = '';\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (results) {\n        console.log(results);\n        var user = results.user;\n        var uid = user.uid;\n        user.updateProfile({\n          displayName: name\n        });\n        Ref.child('users').child(uid).set({\n          email: email,\n          name: name,\n          screenName: email\n        });\n      }).catch(function (err) {\n        _this5.error = err.message;\n        console.log(err);\n      });\n    },\n    validateRegister: function validateRegister() {\n      var _this6 = this;\n\n      var inputs = ['email', 'name', 'password'];\n      var valid = true;\n      inputs.forEach(function (input) {\n        var value = _this6[input];\n\n        if (!valid) {\n          return;\n        }\n\n        if (!value) {\n          valid = false;\n          _this6.error = \"Must input a value for \".concat(input);\n        }\n      });\n      return valid;\n    },\n    toggleLoginState: function toggleLoginState() {\n      if (this.loginState === 'sign-in') {\n        this.loginState = 'register';\n        return;\n      }\n\n      this.loginState = 'sign-in';\n    }\n  }\n};",{"version":3,"sources":["UserSwiper.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n.swiper-container#user-swiper(ref='swiperWrapper')\n\t.swiper-wrapper\n\t\t.swiper-slide.empty(:class='{ \"pointer-events\" : state === \"open\" }' @click.self='close')\n\t\t.swiper-slide.user(:class='state')\n\t\t\t.top\n\t\t\t\t.icon-close(@click='close')\n\t\t\t.content\n\t\t\t\t.content-wrapper.standalone(v-if='standalone && !user')\n\t\t\t\t\t.login(:class='loginState')\n\t\t\t\t\t\th1 {{ loginState === \"sign-in\" ? \"Sign In\" : \"Register\" }}\n\t\t\t\t\t\tp\n\t\t\t\t\t\t.input-wrapper\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='email') email\n\t\t\t\t\t\t\t\tinput(id='email' v-model='email' type='email')\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='name') name\n\t\t\t\t\t\t\t\tinput(id='name' v-model='name')\n\t\t\t\t\t\t\t.input\n\t\t\t\t\t\t\t\tlabel(for='password') password\n\t\t\t\t\t\t\t\t.row\n\t\t\t\t\t\t\t\t\tinput(id='password' v-model='password' v-bind:type='type')\n\t\t\t\t\t\t\t\t\ti.material-icons(v-show='type == \"password\"' @click='type = \"text\"') visibility\n\t\t\t\t\t\t\t\t\ti.material-icons(v-show='type == \"text\"' @click='type = \"password\"') visibility_off\n\t\t\t\t\t\t.btn(@click='loginAction') {{ loginState === \"sign-in\" ? \"Sign In\" : \"Register\" }}\n\t\t\t\t\t\t.error(v-if='error') {{ error }}\n\t\t\t\t\t\t.bottom(@click='toggleLoginState')\n\t\t\t\t\t\t\tspan\n\t\t\t\t\t\t\tspan.blue\n\t\t\t\t.content-wrapper.sign-in(v-else-if='!user')\n\t\t\t\t\th1 Sign In\n\t\t\t\t\tp.spacey with an existing service\n\t\t\t\t\t.social-medias.row\n\t\t\t\t\t\t.social-media(\n\t\t\t\t\t\t\tv-for='provider in providers'\n\t\t\t\t\t\t\t:class='provider.name'\n\t\t\t\t\t\t\t@click='signInWith( provider.id )'\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\timg(:src='`/img/${provider.icon}`')\n\t\t\t\t.content-wrapper.user(v-else)\n\t\t\t\t\t.profile-picture\n\t\t\t\t\t\t.picture(:style='{ backgroundImage : `url(${user.photoURL})` }' v-if='user.photoURL')\n\t\t\t\t\t\t.icon.icon-person(v-else)\n\t\t\t\t\t.name\n\t\t\t\t\t\th1 {{ user.name }}\n\t\t\t\t\t\tp.spacey {{ user.screenName }}\n\t\t\t\t\t.btn.sign-out(@click='signOut') sign out\n\t\t\t\t\tslot(name='after-sign-out-button')\n\n\n</template>\n\n<script>\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\n\nimport { Ref } from '@/lib/db';\n\nexport default {\n\tname : 'user-swiper',\n\n\tdata : () => ( {\n\t\tswiper : null,\n\n\t\tuid  : null,\n\n\t\tproviders : [\n\t\t\t// {\n\t\t\t// \tname : 'twitter',\n\t\t\t// \tid   : 'twitter.com',\n\t\t\t// \ticon : 'twitter.svg',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tname : 'google',\n\t\t\t\tid   : 'google.com',\n\t\t\t\ticon : 'google.svg',\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tname : 'facebook',\n\t\t\t// \tid   : 'facebook.com',\n\t\t\t// \ticon : 'facebook.svg',\n\t\t\t// },\n\t\t],\n\n\t\tstandalone : false,\n\n\t\tloginState : 'sign-in',\n\t\temail      : '',\n\t\tname       : '',\n\t\tpassword   : '',\n\t\ttype       : 'password',\n\t\terror      : '',\n\n\t} ),\n\n\tcomputed : {\n\t\tstate() {\n\t\t\treturn this.$store.state.userSwiperState;\n\t\t},\n\t\tuser() {\n\t\t\treturn this.$store.state.user;\n\t\t},\n\t},\n\n\twatch : {\n\n\t\tstate( state, oldState ) {\n\n\t\t\tif ( oldState === state ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( state === 'open' && this.swiper ) {\n\t\t\t\tthis.swiper.slideTo( 1 );\n\t\t\t}\n\n\t\t\tif ( state === 'closed' ) {\n\t\t\t\tthis.swiper.slideTo( 0 )\n\t\t\t}\n\n\t\t},\n\n\t\tloginState() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\temail() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t\tpassword() {\n\n\t\t\tthis.error = '';\n\n\t\t},\n\n\t},\n\n\t/* life cycle */\n\n\tcreated() {\n\n\t\t// providers from firebase\n\t\tconst providers = {\n\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t};\n\n\t\t// when page reloads check\n\t\t// if this was a redirect\n\t\t// from a previous auth\n\t\tfirebase.auth()\n\t\t\t.getRedirectResult()\n\t\t\t.then( this.saveUser ) // store user\n\t\t\t.catch( ( error ) => { // maybe they already have an account on another provider\n\n\t\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\t\tfirebase.auth().fetchProvidersForEmail( email )\n\t\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t\tconst method = methods[0];\n\n\t\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t},\n\n\tmounted() {\n\t\tthis.init();\n\n\t\t// this.standalone = Browser.isSafari && window.navigator.standalone;\n\t},\n\n\tmethods : {\n\n\t\tinit() {\n\t\t\tconst self = this;\n\n\t\t\tconst { swiperWrapper } = this.$refs;\n\t\t\tthis.swiper = new Swiper( swiperWrapper, { // eslint-disable-line\n\n\t\t\t\t// auto initialize this swiper\n\t\t\t\tinit         : true,\n\t\t\t\tinitialSlide : 0,\n\n\t\t\t\t// swiper settings\n\t\t\t\tslidesPerView   : 'auto', // don't force every slide to be 100vw\n\t\t\t\tspeed           : 400,    // ms for when you let go of swipe\n\t\t\t\tspaceBetween    : 0,      // no space between\n\t\t\t\tresistanceRatio : 0,      // stops you from swiping past all slides\n\t\t\t\tdirection       : 'horizontal',\n\n\t\t\t\tthreshold : 50, // min distance for scroll to work\n\n\t\t\t\ton : {\n\n\t\t\t\t\tinit() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t},\n\n\t\t\t\t\tslideChangeTransitionEnd() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclose() {\n\t\t\tthis.$store.dispatch( 'updateStore', ['userSwiperState', 'closed'] );\n\t\t},\n\n\t\t/* sign in */\n\n\t\tsignInWith( id ) {\n\n\t\t\tconst providers = {\n\t\t\t\t'twitter.com'  : new firebase.auth.TwitterAuthProvider(),\n\t\t\t\t'facebook.com' : new firebase.auth.FacebookAuthProvider(),\n\t\t\t\t'google.com'   : new firebase.auth.GoogleAuthProvider()\n\t\t\t};\n\n\t\t\tconst provider = providers[id];\n\n\t\t\t// mobile sign in\n\t\t\tif ( window.innerWidth <= 768 ) {\n\n\t\t\t\treturn firebase.auth().signInWithRedirect( provider );\n\n\t\t\t\t/* *\n\t\t\t\t * the rest of the logic for this\n\t\t\t\t * is in the created block of this\n\t\t\t\t * view model. this function requires\n\t\t\t\t * a page reload\n\t\t\t\t */\n\n\t\t\t}\n\n\t\t\t// desktop sign in\n\t\t\treturn firebase.auth()\n\t\t\t\t.signInWithPopup( provider )\n\t\t\t\t.then( this.saveUser )\n\t\t\t\t.catch( this.handleAuthFailure );\n\t\t},\n\n\t\thandleAuthFailure( error ) {\n\n\t\t\tif ( error.code === 'auth/account-exists-with-different-credential' ) {\n\n\t\t\t\tconst { credential, email } = error;\n\n\t\t\t\treturn firebase.auth()\n\t\t\t\t\t.fetchProvidersForEmail( email )\n\t\t\t\t\t.then( ( methods ) => {\n\n\t\t\t\t\t\t// sign in with proper provider\n\n\t\t\t\t\t\tconst method = methods[0];\n\t\t\t\t\t\treturn this.signInWith( method );\n\n\t\t\t\t\t} )\n\t\t\t\t\t.then( ( result ) => {\n\n\t\t\t\t\t\t// link the accounts\n\n\t\t\t\t\t\tconst { user } = result;\n\t\t\t\t\t\tuser.linkAndRetrieveDataWithCredential( credential )\n\t\t\t\t\t\t\t.then( this.saveUser );\n\n\t\t\t\t\t\t// does this happen with a mobile sign in ?\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn '';\n\n\t\t},\n\n\t\tsaveUser( result ) {\n\n\t\t\tconst { user, additionalUserInfo } = result;\n\t\t\tconst { profile } = additionalUserInfo;\n\n\t\t\tconst { providerId } = additionalUserInfo;\n\n\t\t\tconst userInfo = {\n\t\t\t\tname  : user.displayName,\n\t\t\t\temail : user.email\n\t\t\t};\n\n\t\t\tswitch ( providerId ) {\n\n\t\t\t\tcase 'twitter.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.profile_image_url,\n\t\t\t\t\t\tscreenName : profile.screen_name\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'facebook.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture.data.url,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'google.com' :\n\n\t\t\t\t\tObject.assign( userInfo, {\n\t\t\t\t\t\tprovider   : providerId,\n\t\t\t\t\t\tphotoURL   : profile.picture,\n\t\t\t\t\t\tscreenName : profile.email\n\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.log( `${providerId} is not a provider` );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn Ref\n\t\t\t\t.child( 'users' )\n\t\t\t\t.child( user.uid )\n\t\t\t\t.update( userInfo );\n\n\n\t\t},\n\n\t\tsignOut() {\n\n\t\t\tfirebase.auth()\n\t\t\t\t.signOut()\n\t\t\t\t.then( () => this.close() );\n\n\t\t},\n\n\t\tloginAction() {\n\n\t\t\tconst state = this.loginState;\n\n\t\t\tif ( state === 'register' ) {\n\t\t\t\tthis.registerWithEmail();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.signInWithEmail();\n\n\t\t},\n\n\t\tsignInWithEmail() {\n\n\t\t\tconst { email, password } = this;\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().signInWithEmailAndPassword( email, password )\n\t\t\t\t.then( () => {\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\t\t},\n\n\t\tregisterWithEmail() {\n\n\t\t\tconst { email, password, name } = this;\n\n\t\t\tif ( !this.validateRegister() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.error = '';\n\n\t\t\tfirebase.auth().createUserWithEmailAndPassword( email, password )\n\t\t\t\t.then( ( results ) => {\n\n\t\t\t\t\tconsole.log( results );\n\n\t\t\t\t\tconst { user } = results;\n\t\t\t\t\tconst { uid } = user;\n\n\t\t\t\t\tuser.updateProfile( {\n\t\t\t\t\t\tdisplayName : name\n\t\t\t\t\t} );\n\n\t\t\t\t\tRef.child( 'users' )\n\t\t\t\t\t\t.child( uid )\n\t\t\t\t\t\t.set( {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tscreenName : email\n\t\t\t\t\t\t} );\n\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\tthis.error = err.message;\n\t\t\t\t\tconsole.log( err );\n\n\t\t\t\t} );\n\n\t\t},\n\n\t\tvalidateRegister() {\n\n\t\t\tconst inputs = ['email', 'name', 'password'];\n\t\t\tlet valid = true;\n\n\t\t\tinputs.forEach( ( input ) => {\n\n\t\t\t\tconst value = this[input];\n\n\t\t\t\tif ( !valid ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tthis.error = `Must input a value for ${input}`;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\ttoggleLoginState() {\n\n\t\t\tif ( this.loginState === 'sign-in' ) {\n\t\t\t\tthis.loginState = 'register';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loginState = 'sign-in';\n\n\t\t}\n\n\t}\n}\n</script>\n\n\n<style lang=\"scss\">\n#user-swiper {\n\t.user {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: stretch;\n\n\t\t.top {\n\t\t\tflex-shrink: 0;\n\t\t}\n\n\t\t.content {\n\t\t\tflex: 1 1 0;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t.content-wrapper {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tflex: 1 1 0;\n\t\t\t}\n\t\t}\n\t}\n\n  .top {\n    padding: 15px;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .content {\n\n\t\t.content-wrapper.standalone {\n\n\t\t\t.login {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tposition: relative;\n\t\t\t\theight: 100vh;\n\n\t\t\t\th1 {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tcolor: $primary;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tmargin: 15px;\n\t\t\t\t}\n\n\t\t\t\t.input-wrapper {\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t\tborder-radius: 20px;\n\t\t\t\t\tbox-shadow: $floatingObject;\n\n\t\t\t\t\t.input {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\t\tborder-bottom: 1px solid #cfcfcf;\n\n\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\t\tletter-spacing: 3px;\n\t\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinput {\n\t\t\t\t\t\t\tflex: 1 1 0;\n\t\t\t\t\t\t\tpadding: 5px 0;\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&:last-child {\n\t\t\t\t\t\t\tborder-bottom: 1px solid transparent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.btn {\n\t\t\t\t\tbackground-image: linear-gradient(to right, darken( $primary, 5 ), lighten( $primary, 15 ) );\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 15px 15px;\n\t\t\t\t\tborder-radius: 25px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t}\n\n\t\t\t\t.error {\n\t\t\t\t\tmargin: 20px;\n    \t\t\ttext-align: center;\n\t\t\t\t\tcolor: $cancel;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t}\n\n\t\t\t\t.bottom {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t\talign-self: center;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 30px;\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&.sign-in {\n\n\t\t\t\t\tp {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'sign in to your account with your email and password';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.input-wrapper {\n\n\t\t\t\t\t\t.input {\n\t\t\t\t\t\t &:nth-child(2) {\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'No Account?';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&.blue {\n\t\t\t\t\t\t\tcolor: #0e68f8;\n\t\t\t\t\t\t\tmargin-left: 5px;\n\n\t\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\t\tcontent: 'Register'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t&.register {\n\n\t\t\t\t\tp {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'create an account to help track your saved courses';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcontent: 'Have an Account?';\n\t\t\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&.blue {\n\t\t\t\t\t\t\tcolor: #0e68f8;\n\t\t\t\t\t\t\tmargin-left: 5px;\n\n\t\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\t\tcontent: 'Sign In'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n    .content-wrapper.sign-in {\n\n      h1 {\n        text-align: center;\n\t\t\t\tfont-size: 48px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tcolor: $primary;\n      }\n\n      p {\n        text-align: center;\n        margin: 15px 10px 0px 10px;\n      }\n\n      .social-medias {\n        justify-content: center;\n        margin-top: 30px;\n\n        .social-media {\n          height: 60px;\n          width: 60px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 10px;\n\n          &.twitter {\n            background-color: $twitterBlue;\n          }\n\n          &.facebook {\n            background-color: $facebookBlue;\n          }\n\n          &.google {\n            background-color: $googleRed;\n          }\n        }\n      }\n    }\n\n    .content-wrapper.user {\n\n      .profile-picture {\n\n        .picture {\n          position: relative;\n          left: 50%;\n          transform: translateX(-50%);\n          height: 90px;\n          width: 90px;\n          border-radius: 50%;\n          background-size: cover;\n          background-position: center center;\n\t\t\t\t}\n\n\t\t\t\t.icon-person {\n\t\t\t\t\tfont-size: 100px;\n\t\t\t\t}\n\n      }\n\n      .name {\n        margin-top: 30px;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tpadding: 0 30px;\n\n        h1,\n        p {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        h1 {\n          font-size: 36px;\n          text-align: center;\n        }\n\n        p {\n          text-align: center;\n          margin-top: 10px;\n          font-size: 12px;\n        }\n      }\n\n      .btn {\n        margin-top: 30px;\n        position: relative;\n        display: inline-block;\n\t\t\t}\n    }\n\t}\n\n\t.icon-close {\n\t\theight: 30px;\n\t\twidth: 30px;\n\t\tposition: relative;\n\t\tcursor: pointer;\n\n\t\t&::before,\n\t\t&::after {\n\t\t\tcontent: ' ';\n\t\t\theight: 24px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground-color: $primary;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t}\n\n\t\t&::before {\n\t\t\ttransform: translate(-50%,-50%) rotate(45deg);\n\t\t}\n\n\t\t&::after {\n\t\t\ttransform: translate(-50%,-50%) rotate(-45deg);\n\t\t}\n\t}\n\n\t.btn {\n\t\tfont-size: 12px;\n\t\ttext-transform: uppercase;\n\t\tpadding: 15px;\n\t\tborder-radius: 40px;\n\t\tbackground-color: $primary;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\topacity: 1;\n\t\ttransition: opacity 0.2s ease;\n\t\tfont-family: \"Work Sans\", opensans;\n\t\tletter-spacing: 2px;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none;   /* Chrome/Safari/Opera */\n\t\t-khtml-user-select: none;    /* Konqueror */\n\t\t-moz-user-select: none;      /* Firefox */\n\t\t-ms-user-select: none;       /* Internet Explorer/Edge */\n\t\tuser-select: none;           /* Non-prefixed version, currently\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnot supported by any browser */\n\t}\n}\n\n/* tablets and desktops */\n@media only screen and (min-width : 768px) {\n\n\t.swiper-slide.user {\n\t\twidth: 330px;\n\t\tbox-shadow: none;\n\t\ttransition: box-shadow 0.2s ease;\n\n\t\t&.open {\n\t\t\tbox-shadow: $floatingObject !important;\n\t\t}\n\t}\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}