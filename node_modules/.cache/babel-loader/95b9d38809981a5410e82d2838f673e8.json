{"remainingRequest":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/course-catalog-v2/node_modules/eslint-loader/index.js??ref--12-0!/Users/brianphan/jets/course-catalog-v2/src/store.js","dependencies":[{"path":"/Users/brianphan/jets/course-catalog-v2/src/store.js","mtime":1609282060290},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/course-catalog-v2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport router from '@/router';\nimport { Ref } from '@/lib/db';\nimport { ObjToArray, FilterNode } from '@/lib/utils';\nimport { Upload, Search } from '@/lib/API';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    sideMenuSwiper: null,\n    user: false,\n    isAdmin: false,\n    savedCourseKeys: {},\n    subjectMap: {},\n    subjects: [],\n    activeCourse: {},\n    courseInfoState: 'closed',\n    userSwiperState: 'closed',\n    schools: [],\n    sectors: [],\n    loadingSectors: true,\n    courses: [],\n    courseState: 'loading',\n    model: {},\n    filters: [],\n    openedFilters: {},\n    selectedFilters: {},\n    searchResults: null,\n    uploadOpened: false,\n    uploadErrors: [],\n    uploadErrorsState: 'upload',\n    modalState: 'browse',\n    modalStep: 'open',\n    newSector: {\n      title: null,\n      iconUrl: null,\n      fileUrl: null\n    },\n    isEditing: false\n  },\n  mutations: {\n    /* eslint-disable no-param-reassign */\n    updateSwiper: function updateSwiper(state, swiper) {\n      state.sideMenuSwiper = swiper;\n    },\n    destroySideMenuSwiper: function destroySideMenuSwiper(state) {\n      state.sideMenuSwiper.destroy(false, false);\n    },\n    updateUser: function updateUser(state, payload) {\n      var user = payload.user,\n          isAdmin = payload.isAdmin;\n      state.user = user;\n      state.isAdmin = isAdmin;\n    },\n    updateStore: function updateStore(state, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          prop = _ref2[0],\n          value = _ref2[1];\n\n      state[prop] = value;\n    },\n    updateFilters: function updateFilters(state, filters) {\n      var formattedFilters = filters.map(function (filter) {\n        var type = filter.type;\n\n        if (type === 'list') {\n          filter.options = [{\n            value: 'All'\n          }].concat(filter.options);\n        }\n\n        if (type === 'multi-list') {\n          filter.options = [{\n            abv: 'All',\n            value: 'All'\n          }].concat(filter.options);\n        }\n\n        return filter;\n      });\n      var selectedFilters = formattedFilters.reduce(function (obj, filter) {\n        var key = filter.key,\n            type = filter.type;\n\n        switch (type) {\n          case 'boolean':\n            obj[key] = false;\n            break;\n\n          case 'arbitrary':\n            obj[key] = false;\n            break;\n\n          case 'list':\n            obj[key] = filter.options[0].value;\n            break;\n\n          case 'multi-list':\n            obj[key] = filter.options[0].value;\n            break;\n\n          default:\n            break;\n        }\n\n        return obj;\n      }, {});\n      var openedFilters = filters.reduce(function (obj, filter) {\n        var key = filter.key,\n            type = filter.type;\n\n        if (type !== 'boolean') {\n          obj[key] = false;\n        }\n\n        return obj;\n      }, {});\n      state.selectedFilters = selectedFilters;\n      state.openedFilters = openedFilters;\n      state.filters = formattedFilters.sort(function (filter) {\n        var type = filter.type;\n\n        if (type === 'boolean' || type === 'arbitrary') {\n          return 1;\n        }\n\n        return -1;\n      });\n    },\n    updateModel: function updateModel(state, model) {\n      state.model = model;\n    },\n    updateOpened: function updateOpened(state, payload) {\n      var key = payload.key,\n          value = payload.value;\n      state.openedFilters[key] = value;\n    },\n    selectFilter: function selectFilter(state, payload) {\n      var key = payload.key,\n          value = payload.value;\n      state.selectedFilters[key] = value;\n    },\n    uploadFail: function uploadFail(state, errors) {\n      state.uploadErrorsState = 'fail';\n      state.uploadErrors = errors;\n    },\n    closeUpload: function closeUpload(state) {\n      state.uploadOpened = false;\n      state.uploadErrors = [];\n      state.uploadErrorsState = 'upload';\n    },\n    openSectorUpload: function openSectorUpload(state, sector) {\n      state.modalState = 'add-sector';\n\n      if (sector) {\n        state.isEditing = true;\n        state.newSector = Object.assign({}, sector);\n      }\n    },\n    closeSectorUpload: function closeSectorUpload(state) {\n      state.modalState = 'browse';\n      state.modalStep = 'open';\n      state.newSector = {\n        title: null,\n        iconUrl: null,\n        fileUrl: null\n      };\n      state.isEditing = false;\n    },\n    search: function search(state, results) {\n      state.searchResults = results;\n      state.courseState = 'loaded';\n    },\n    resetFilters: function resetFilters(state, defaultFilters) {\n      state.selectedFilters = defaultFilters;\n    }\n    /* eslint-enable no-param-reassign */\n\n  },\n  actions: {\n    initSideMenuSwiper: function initSideMenuSwiper(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit;\n      var sideMenuSwiper = state.sideMenuSwiper;\n\n      if (sideMenuSwiper && !sideMenuSwiper.destroyed) {\n        sideMenuSwiper.destroy();\n      }\n\n      var swiper = new Swiper('#side-menu-swiper', {\n        // eslint-disable-line\n        // auto initialize this swiper\n        init: true,\n        initialSlide: 1,\n        // swiper settings\n        slidesPerView: 'auto',\n        // don't force every slide to be 100vw\n        speed: 400,\n        // ms for when you let go of swipe\n        spaceBetween: 0,\n        // no space between\n        resistanceRatio: 0,\n        // stops you from swiping past all slides\n        direction: 'horizontal',\n        threshold: 50 // min distance for scroll to work\n\n      });\n      commit('updateSwiper', swiper);\n    },\n    destroySideMenuSwiper: function destroySideMenuSwiper(_ref4) {\n      var commit = _ref4.commit;\n      commit('destroySideMenuSwiper');\n    },\n    initAuthListener: function initAuthListener(_ref5) {\n      var commit = _ref5.commit,\n          dispatch = _ref5.dispatch;\n      return new Promise(function (resolve) {\n        firebase.auth().onAuthStateChanged(function (user) {\n          if (!user) {\n            var payload = {\n              user: user,\n              isAdmin: false\n            };\n            commit('updateUser', payload);\n            resolve(user);\n            return;\n          }\n\n          var uid = user.uid;\n          Ref.child('savedCourses').child(uid).on('value', function (snapshot) {\n            var savedCourseKeys = snapshot.val() || {};\n            commit('updateStore', ['savedCourseKeys', savedCourseKeys]);\n          });\n          dispatch('updateUser', user).then(resolve);\n        });\n      });\n    },\n    updateUser: function updateUser(_ref6, user) {\n      var commit = _ref6.commit;\n      var uid = user.uid;\n      return Promise.all([Ref.child('users').child(uid).once('value').then(function (snapshot) {\n        return snapshot.val();\n      }), Ref.child('roles').child(uid).once('value').then(function (snapshot) {\n        return snapshot.val();\n      })]).then(function (data) {\n        var userObj = data[0];\n        var isAdmin = data[1] === 'admin';\n\n        if (!userObj) {\n          return userObj;\n        }\n\n        userObj.uid = uid;\n        userObj.displayName = user.displayName;\n        var payload = {\n          user: userObj,\n          isAdmin: isAdmin\n        };\n        commit('updateUser', payload);\n        return userObj;\n      });\n    },\n    getCatalog: function getCatalog(_ref7) {\n      var commit = _ref7.commit;\n      commit('updateStore', ['courseState', 'loading']);\n      Ref.child('courses').on('value', function (snapshot) {\n        var courses = snapshot.val() || {};\n        commit('updateStore', ['courses', ObjToArray(courses)]);\n        commit('updateStore', ['courseState', 'loaded']);\n      });\n      Ref.child('model').on('value', function (snapshot) {\n        var model = snapshot.val();\n        commit('updateModel', model);\n        commit('updateFilters', model.filterable);\n      });\n      Ref.child('schools').on('value', function (snapshot) {\n        var schools = snapshot.val();\n\n        if (!schools) {\n          return;\n        }\n\n        commit('updateStore', ['schools', schools]);\n      });\n    },\n    updateStore: function updateStore(_ref8, _ref9) {\n      var commit = _ref8.commit;\n\n      var _ref10 = _slicedToArray(_ref9, 2),\n          prop = _ref10[0],\n          value = _ref10[1];\n\n      commit('updateStore', [prop, value]);\n    },\n    toggleSideMenu: function toggleSideMenu(_ref11) {\n      var state = _ref11.state;\n      var sideMenuSwiper = state.sideMenuSwiper;\n      var activeSlide = sideMenuSwiper.activeIndex;\n\n      if (activeSlide === 1) {\n        sideMenuSwiper.slidePrev();\n        return;\n      }\n\n      sideMenuSwiper.slideNext();\n    },\n    updateOpened: function updateOpened(_ref12, payload) {\n      var commit = _ref12.commit;\n      commit('updateOpened', payload);\n    },\n    selectFilter: function selectFilter(_ref13, payload) {\n      var commit = _ref13.commit;\n      commit('selectFilter', payload);\n    },\n    updateSectors: function updateSectors(_ref14, key) {\n      var commit = _ref14.commit;\n      commit('updateStore', ['loadingSectors', true]);\n      return new Promise(function (resolve) {\n        Ref.child('cte').child(key).on('value', function (snapshot) {\n          return FilterNode(snapshot).then(function (results) {\n            var sectors = ObjToArray(results);\n            commit('updateStore', ['sectors', sectors]);\n            commit('updateStore', ['loadingSectors', false]);\n            resolve();\n          });\n        });\n      });\n    },\n    openCourseInfo: function openCourseInfo(_ref15, key) {\n      var commit = _ref15.commit,\n          state = _ref15.state;\n      var courses = state.courses,\n          savedCourseKeys = state.savedCourseKeys;\n      var path = router.history.current.path;\n      var course;\n\n      if (path === '/courses') {\n        course = courses.find(function (a) {\n          return a.key === key;\n        });\n      } else {\n        course = null;\n\n        if (savedCourseKeys[key]) {\n          course = courses.find(function (a) {\n            return a.key === key;\n          });\n        }\n      }\n\n      if (!course) {\n        router.replace({\n          path: path\n        });\n        return;\n      }\n\n      commit('updateStore', ['activeCourse', course]);\n      commit('updateStore', ['courseInfoState', 'open']);\n    },\n    closeCourseInfo: function closeCourseInfo(_ref16) {\n      var commit = _ref16.commit;\n      commit('updateStore', ['activeCourse', {}]);\n      commit('updateStore', ['courseInfoState', 'closed']);\n    },\n    openSectorUpload: function openSectorUpload(_ref17, sector) {\n      var commit = _ref17.commit;\n      commit('openSectorUpload', sector);\n    },\n    closeSectorUpload: function closeSectorUpload(_ref18) {\n      var commit = _ref18.commit;\n      commit('closeSectorUpload');\n    },\n    saveCourse: function saveCourse(_ref19, key) {\n      var commit = _ref19.commit,\n          state = _ref19.state;\n      var user = state.user,\n          savedCourseKeys = state.savedCourseKeys;\n\n      if (!user) {\n        commit('updateStore', ['userSwiperState', 'open']);\n        return;\n      }\n\n      var uid = user.uid;\n      var isSaved = savedCourseKeys[key] !== undefined;\n\n      if (isSaved) {\n        Ref.child('savedCourses').child(uid).child(key).remove();\n        return;\n      }\n\n      Ref.child('savedCourses').child(uid).child(key).set(Date.now());\n    },\n    search: function search(_ref20, query) {\n      var commit = _ref20.commit;\n\n      if (!query) {\n        commit('search', null);\n        return;\n      }\n\n      commit('updateStore', ['courseState', 'loading']);\n      Search(query).then(function (results) {\n        commit('search', results);\n      });\n    },\n    upload: function upload(_ref21) {\n      var commit = _ref21.commit;\n      commit('updateStore', ['uploadOpened', true]);\n      commit('updateStore', ['uploadErrorsState', 'loading']);\n      Upload().then(function () {\n        commit('updateStore', ['uploadErrorsState', 'success']);\n      }).catch(function (res) {\n        var status = res.status;\n\n        if (status === 500) {\n          commit('updateStore', ['uploadErrorsState', 'error']);\n          return;\n        }\n\n        res.json().then(function (err) {\n          console.log(err);\n          commit('uploadFail', err.errors);\n        });\n      });\n    },\n    closeUpload: function closeUpload(_ref22) {\n      var commit = _ref22.commit;\n      commit('closeUpload');\n    },\n    resetFilters: function resetFilters(_ref23) {\n      var commit = _ref23.commit,\n          state = _ref23.state;\n      var filters = state.filters;\n      var defaultFilters = filters.reduce(function (obj, filter) {\n        var key = filter.key,\n            type = filter.type;\n\n        switch (type) {\n          case 'boolean':\n            {\n              obj[key] = false;\n              break;\n            }\n\n          case 'arbitrary':\n            {\n              obj[key] = false;\n              break;\n            }\n\n          case 'list':\n            {\n              var defaultVal = filter.options[0].value;\n              obj[key] = defaultVal;\n              break;\n            }\n\n          case 'multi-list':\n            {\n              var _defaultVal = filter.options[0].value;\n              obj[key] = _defaultVal;\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n\n        return obj;\n      }, {});\n      commit('resetFilters', defaultFilters);\n    }\n  }\n});",{"version":3,"sources":["/Users/brianphan/jets/course-catalog-v2/src/store.js"],"names":["Vue","Vuex","Swiper","firebase","router","Ref","ObjToArray","FilterNode","Upload","Search","use","Store","state","sideMenuSwiper","user","isAdmin","savedCourseKeys","subjectMap","subjects","activeCourse","courseInfoState","userSwiperState","schools","sectors","loadingSectors","courses","courseState","model","filters","openedFilters","selectedFilters","searchResults","uploadOpened","uploadErrors","uploadErrorsState","modalState","modalStep","newSector","title","iconUrl","fileUrl","isEditing","mutations","updateSwiper","swiper","destroySideMenuSwiper","destroy","updateUser","payload","updateStore","prop","value","updateFilters","formattedFilters","map","filter","type","options","concat","abv","reduce","obj","key","sort","updateModel","updateOpened","selectFilter","uploadFail","errors","closeUpload","openSectorUpload","sector","Object","assign","closeSectorUpload","search","results","resetFilters","defaultFilters","actions","initSideMenuSwiper","commit","destroyed","init","initialSlide","slidesPerView","speed","spaceBetween","resistanceRatio","direction","threshold","initAuthListener","dispatch","Promise","resolve","auth","onAuthStateChanged","uid","child","on","snapshot","val","then","all","once","data","userObj","displayName","getCatalog","filterable","toggleSideMenu","activeSlide","activeIndex","slidePrev","slideNext","updateSectors","openCourseInfo","path","history","current","course","find","a","replace","closeCourseInfo","saveCourse","isSaved","undefined","remove","set","Date","now","query","upload","catch","res","status","json","err","console","log","defaultVal"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,aAAvC;AAEA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;AAEAT,GAAG,CAACU,GAAJ,CAAST,IAAT;AAEA,eAAe,IAAIA,IAAI,CAACU,KAAT,CAAgB;AAC9BC,EAAAA,KAAK,EAAG;AACPC,IAAAA,cAAc,EAAG,IADV;AAGPC,IAAAA,IAAI,EAAM,KAHH;AAIPC,IAAAA,OAAO,EAAG,KAJH;AAMPC,IAAAA,eAAe,EAAG,EANX;AAQPC,IAAAA,UAAU,EAAG,EARN;AASPC,IAAAA,QAAQ,EAAK,EATN;AAYPC,IAAAA,YAAY,EAAM,EAZX;AAaPC,IAAAA,eAAe,EAAG,QAbX;AAePC,IAAAA,eAAe,EAAG,QAfX;AAiBPC,IAAAA,OAAO,EAAU,EAjBV;AAkBPC,IAAAA,OAAO,EAAU,EAlBV;AAmBPC,IAAAA,cAAc,EAAG,IAnBV;AAqBPC,IAAAA,OAAO,EAAW,EArBX;AAsBPC,IAAAA,WAAW,EAAO,SAtBX;AAuBPC,IAAAA,KAAK,EAAa,EAvBX;AAwBPC,IAAAA,OAAO,EAAW,EAxBX;AAyBPC,IAAAA,aAAa,EAAK,EAzBX;AA0BPC,IAAAA,eAAe,EAAG,EA1BX;AA4BPC,IAAAA,aAAa,EAAG,IA5BT;AA8BPC,IAAAA,YAAY,EAAQ,KA9Bb;AA+BPC,IAAAA,YAAY,EAAQ,EA/Bb;AAgCPC,IAAAA,iBAAiB,EAAG,QAhCb;AAkCPC,IAAAA,UAAU,EAAG,QAlCN;AAmCPC,IAAAA,SAAS,EAAI,MAnCN;AAoCPC,IAAAA,SAAS,EAAI;AACZC,MAAAA,KAAK,EAAK,IADE;AAEZC,MAAAA,OAAO,EAAG,IAFE;AAGZC,MAAAA,OAAO,EAAG;AAHE,KApCN;AAyCPC,IAAAA,SAAS,EAAG;AAzCL,GADsB;AA6C9BC,EAAAA,SAAS,EAAG;AACX;AACAC,IAAAA,YAFW,wBAEG/B,KAFH,EAEUgC,MAFV,EAEmB;AAC7BhC,MAAAA,KAAK,CAACC,cAAN,GAAuB+B,MAAvB;AACA,KAJU;AAMXC,IAAAA,qBANW,iCAMYjC,KANZ,EAMoB;AAC9BA,MAAAA,KAAK,CAACC,cAAN,CAAqBiC,OAArB,CAA8B,KAA9B,EAAqC,KAArC;AACA,KARU;AAUXC,IAAAA,UAVW,sBAUCnC,KAVD,EAUQoC,OAVR,EAUkB;AAAA,UACpBlC,IADoB,GACFkC,OADE,CACpBlC,IADoB;AAAA,UACdC,OADc,GACFiC,OADE,CACdjC,OADc;AAG5BH,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACAF,MAAAA,KAAK,CAACG,OAAN,GAAgBA,OAAhB;AACA,KAfU;AAiBXkC,IAAAA,WAjBW,uBAiBErC,KAjBF,QAiByB;AAAA;AAAA,UAAfsC,IAAe;AAAA,UAATC,KAAS;;AACnCvC,MAAAA,KAAK,CAACsC,IAAD,CAAL,GAAcC,KAAd;AACA,KAnBU;AAqBXC,IAAAA,aArBW,yBAqBIxC,KArBJ,EAqBWgB,OArBX,EAqBqB;AAC/B,UAAMyB,gBAAgB,GAAGzB,OAAO,CAAC0B,GAAR,CAAa,UAAEC,MAAF,EAAc;AAAA,YAC3CC,IAD2C,GAClCD,MADkC,CAC3CC,IAD2C;;AAGnD,YAAKA,IAAI,KAAK,MAAd,EAAuB;AACtBD,UAAAA,MAAM,CAACE,OAAP,GAAiB,CAAC;AAAEN,YAAAA,KAAK,EAAG;AAAV,WAAD,EAAoBO,MAApB,CAA4BH,MAAM,CAACE,OAAnC,CAAjB;AACA;;AAED,YAAKD,IAAI,KAAK,YAAd,EAA6B;AAC5BD,UAAAA,MAAM,CAACE,OAAP,GAAiB,CAAC;AAAEE,YAAAA,GAAG,EAAG,KAAR;AAAeR,YAAAA,KAAK,EAAG;AAAvB,WAAD,EAAiCO,MAAjC,CAAyCH,MAAM,CAACE,OAAhD,CAAjB;AACA;;AAED,eAAOF,MAAP;AACA,OAZwB,CAAzB;AAcA,UAAMzB,eAAe,GAAGuB,gBAAgB,CAACO,MAAjB,CAAyB,UAAEC,GAAF,EAAON,MAAP,EAAmB;AAAA,YAC3DO,GAD2D,GAC7CP,MAD6C,CAC3DO,GAD2D;AAAA,YACtDN,IADsD,GAC7CD,MAD6C,CACtDC,IADsD;;AAGnE,gBAASA,IAAT;AACC,eAAK,SAAL;AACCK,YAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACA;;AAED,eAAK,WAAL;AACCD,YAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACA;;AAED,eAAK,MAAL;AACCD,YAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBN,KAA7B;AACA;;AAED,eAAK,YAAL;AACCU,YAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBN,KAA7B;AACA;;AAED;AACC;AAlBF;;AAqBA,eAAOU,GAAP;AACA,OAzBuB,EAyBrB,EAzBqB,CAAxB;AA4BA,UAAMhC,aAAa,GAAGD,OAAO,CAACgC,MAAR,CAAgB,UAAEC,GAAF,EAAON,MAAP,EAAmB;AAAA,YAChDO,GADgD,GAClCP,MADkC,CAChDO,GADgD;AAAA,YAC3CN,IAD2C,GAClCD,MADkC,CAC3CC,IAD2C;;AAGxD,YAAKA,IAAI,KAAK,SAAd,EAA0B;AACzBK,UAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACA;;AAED,eAAOD,GAAP;AACA,OARqB,EAQnB,EARmB,CAAtB;AAUAjD,MAAAA,KAAK,CAACkB,eAAN,GAAwBA,eAAxB;AACAlB,MAAAA,KAAK,CAACiB,aAAN,GAAwBA,aAAxB;AACAjB,MAAAA,KAAK,CAACgB,OAAN,GAAwByB,gBAAgB,CAACU,IAAjB,CAAuB,UAAER,MAAF,EAAc;AAAA,YACpDC,IADoD,GAC3CD,MAD2C,CACpDC,IADoD;;AAG5D,YAAKA,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,WAApC,EAAkD;AACjD,iBAAO,CAAP;AACA;;AAED,eAAO,CAAC,CAAR;AACA,OARuB,CAAxB;AAUA,KAtFU;AAwFXQ,IAAAA,WAxFW,uBAwFEpD,KAxFF,EAwFSe,KAxFT,EAwFiB;AAC3Bf,MAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AACA,KA1FU;AA4FXsC,IAAAA,YA5FW,wBA4FGrD,KA5FH,EA4FUoC,OA5FV,EA4FoB;AAAA,UACtBc,GADsB,GACPd,OADO,CACtBc,GADsB;AAAA,UACjBX,KADiB,GACPH,OADO,CACjBG,KADiB;AAG9BvC,MAAAA,KAAK,CAACiB,aAAN,CAAoBiC,GAApB,IAA2BX,KAA3B;AACA,KAhGU;AAkGXe,IAAAA,YAlGW,wBAkGGtD,KAlGH,EAkGUoC,OAlGV,EAkGoB;AAAA,UACtBc,GADsB,GACPd,OADO,CACtBc,GADsB;AAAA,UACjBX,KADiB,GACPH,OADO,CACjBG,KADiB;AAE9BvC,MAAAA,KAAK,CAACkB,eAAN,CAAsBgC,GAAtB,IAA6BX,KAA7B;AACA,KArGU;AAuGXgB,IAAAA,UAvGW,sBAuGCvD,KAvGD,EAuGQwD,MAvGR,EAuGiB;AAE3BxD,MAAAA,KAAK,CAACsB,iBAAN,GAA0B,MAA1B;AACAtB,MAAAA,KAAK,CAACqB,YAAN,GAA0BmC,MAA1B;AAEA,KA5GU;AA8GXC,IAAAA,WA9GW,uBA8GEzD,KA9GF,EA8GU;AACpBA,MAAAA,KAAK,CAACoB,YAAN,GAA0B,KAA1B;AACApB,MAAAA,KAAK,CAACqB,YAAN,GAA0B,EAA1B;AACArB,MAAAA,KAAK,CAACsB,iBAAN,GAA0B,QAA1B;AACA,KAlHU;AAoHXoC,IAAAA,gBApHW,4BAoHO1D,KApHP,EAoHc2D,MApHd,EAoHuB;AAEjC3D,MAAAA,KAAK,CAACuB,UAAN,GAAmB,YAAnB;;AAEA,UAAKoC,MAAL,EAAc;AACb3D,QAAAA,KAAK,CAAC6B,SAAN,GAAkB,IAAlB;AACA7B,QAAAA,KAAK,CAACyB,SAAN,GAAkBmC,MAAM,CAACC,MAAP,CAAe,EAAf,EAAmBF,MAAnB,CAAlB;AACA;AAED,KA7HU;AA+HXG,IAAAA,iBA/HW,6BA+HQ9D,KA/HR,EA+HgB;AAC1BA,MAAAA,KAAK,CAACuB,UAAN,GAAmB,QAAnB;AACAvB,MAAAA,KAAK,CAACwB,SAAN,GAAmB,MAAnB;AAEAxB,MAAAA,KAAK,CAACyB,SAAN,GAAkB;AACjBC,QAAAA,KAAK,EAAK,IADO;AAEjBC,QAAAA,OAAO,EAAG,IAFO;AAGjBC,QAAAA,OAAO,EAAG;AAHO,OAAlB;AAMA5B,MAAAA,KAAK,CAAC6B,SAAN,GAAkB,KAAlB;AACA,KA1IU;AA4IXkC,IAAAA,MA5IW,kBA4IH/D,KA5IG,EA4IIgE,OA5IJ,EA4Ic;AACxBhE,MAAAA,KAAK,CAACmB,aAAN,GAAsB6C,OAAtB;AACAhE,MAAAA,KAAK,CAACc,WAAN,GAAsB,QAAtB;AACA,KA/IU;AAiJXmD,IAAAA,YAjJW,wBAiJGjE,KAjJH,EAiJUkE,cAjJV,EAiJ2B;AACrClE,MAAAA,KAAK,CAACkB,eAAN,GAAwBgD,cAAxB;AACA;AAED;;AArJW,GA7CkB;AAoM9BC,EAAAA,OAAO,EAAG;AAETC,IAAAA,kBAFS,qCAE+B;AAAA,UAAlBpE,KAAkB,SAAlBA,KAAkB;AAAA,UAAXqE,MAAW,SAAXA,MAAW;AAAA,UAE/BpE,cAF+B,GAEZD,KAFY,CAE/BC,cAF+B;;AAIvC,UAAKA,cAAc,IAAI,CAACA,cAAc,CAACqE,SAAvC,EAAmD;AAClDrE,QAAAA,cAAc,CAACiC,OAAf;AACA;;AAED,UAAMF,MAAM,GAAG,IAAI1C,MAAJ,CAAY,mBAAZ,EAAiC;AAAE;AACjD;AACAiF,QAAAA,IAAI,EAAW,IAFgC;AAG/CC,QAAAA,YAAY,EAAG,CAHgC;AAK/C;AACAC,QAAAA,aAAa,EAAK,MAN6B;AAMrB;AAC1BC,QAAAA,KAAK,EAAa,GAP6B;AAOxB;AACvBC,QAAAA,YAAY,EAAM,CAR6B;AAQ1B;AACrBC,QAAAA,eAAe,EAAG,CAT6B;AAS1B;AACrBC,QAAAA,SAAS,EAAS,YAV6B;AAY/CC,QAAAA,SAAS,EAAG,EAZmC,CAY/B;;AAZ+B,OAAjC,CAAf;AAeAT,MAAAA,MAAM,CAAE,cAAF,EAAkBrC,MAAlB,CAAN;AACA,KA1BQ;AA4BTC,IAAAA,qBA5BS,wCA4B2B;AAAA,UAAXoC,MAAW,SAAXA,MAAW;AACnCA,MAAAA,MAAM,CAAE,uBAAF,CAAN;AACA,KA9BQ;AAgCTU,IAAAA,gBAAgB,EAAG;AAAA,UAAIV,MAAJ,SAAIA,MAAJ;AAAA,UAAYW,QAAZ,SAAYA,QAAZ;AAAA,aAA4B,IAAIC,OAAJ,CAAa,UAAEC,OAAF,EAAe;AAE1E3F,QAAAA,QAAQ,CAAC4F,IAAT,GAAgBC,kBAAhB,CAAoC,UAAElF,IAAF,EAAY;AAE/C,cAAK,CAACA,IAAN,EAAa;AACZ,gBAAMkC,OAAO,GAAG;AACflC,cAAAA,IAAI,EAAJA,IADe;AAEfC,cAAAA,OAAO,EAAG;AAFK,aAAhB;AAKAkE,YAAAA,MAAM,CAAE,YAAF,EAAgBjC,OAAhB,CAAN;AACA8C,YAAAA,OAAO,CAAEhF,IAAF,CAAP;AACA;AACA;;AAX8C,cAavCmF,GAbuC,GAa/BnF,IAb+B,CAavCmF,GAbuC;AAe/C5F,UAAAA,GAAG,CACD6F,KADF,CACS,cADT,EAEEA,KAFF,CAESD,GAFT,EAGEE,EAHF,CAGM,OAHN,EAGe,UAAEC,QAAF,EAAgB;AAC7B,gBAAMpF,eAAe,GAAGoF,QAAQ,CAACC,GAAT,MAAkB,EAA1C;AACApB,YAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,iBAAD,EAAoBjE,eAApB,CAAjB,CAAN;AACA,WANF;AAQA4E,UAAAA,QAAQ,CAAE,YAAF,EAAgB9E,IAAhB,CAAR,CACEwF,IADF,CACQR,OADR;AAGA,SA1BD;AA4BA,OA9B8C,CAA5B;AAAA,KAhCV;AAgET/C,IAAAA,UAhES,6BAgEejC,IAhEf,EAgEsB;AAAA,UAAjBmE,MAAiB,SAAjBA,MAAiB;AAAA,UAEtBgB,GAFsB,GAEdnF,IAFc,CAEtBmF,GAFsB;AAI9B,aAAOJ,OAAO,CAACU,GAAR,CAAa,CACnBlG,GAAG,CACD6F,KADF,CACS,OADT,EAEEA,KAFF,CAESD,GAFT,EAGEO,IAHF,CAGQ,OAHR,EAIEF,IAJF,CAIQ,UAAAF,QAAQ;AAAA,eAAIA,QAAQ,CAACC,GAAT,EAAJ;AAAA,OAJhB,CADmB,EAMnBhG,GAAG,CACD6F,KADF,CACS,OADT,EAEEA,KAFF,CAESD,GAFT,EAGEO,IAHF,CAGQ,OAHR,EAIEF,IAJF,CAIQ,UAAAF,QAAQ;AAAA,eAAIA,QAAQ,CAACC,GAAT,EAAJ;AAAA,OAJhB,CANmB,CAAb,EAYLC,IAZK,CAYC,UAAEG,IAAF,EAAY;AAClB,YAAMC,OAAO,GAAQD,IAAI,CAAC,CAAD,CAAzB;AACA,YAAM1F,OAAO,GAAU0F,IAAI,CAAC,CAAD,CAAJ,KAAY,OAAnC;;AAEA,YAAK,CAACC,OAAN,EAAgB;AACf,iBAAOA,OAAP;AACA;;AAEDA,QAAAA,OAAO,CAACT,GAAR,GAAsBA,GAAtB;AACAS,QAAAA,OAAO,CAACC,WAAR,GAAsB7F,IAAI,CAAC6F,WAA3B;AAEA,YAAM3D,OAAO,GAAG;AACflC,UAAAA,IAAI,EAAG4F,OADQ;AAEf3F,UAAAA,OAAO,EAAPA;AAFe,SAAhB;AAKAkE,QAAAA,MAAM,CAAE,YAAF,EAAgBjC,OAAhB,CAAN;AAEA,eAAO0D,OAAP;AAEA,OAhCK,CAAP;AAiCA,KArGQ;AAuGTE,IAAAA,UAvGS,6BAuGgB;AAAA,UAAX3B,MAAW,SAAXA,MAAW;AAExBA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,aAAD,EAAgB,SAAhB,CAAjB,CAAN;AAEA5E,MAAAA,GAAG,CACD6F,KADF,CACS,SADT,EAEEC,EAFF,CAEM,OAFN,EAEe,UAAEC,QAAF,EAAgB;AAC7B,YAAM3E,OAAO,GAAG2E,QAAQ,CAACC,GAAT,MAAkB,EAAlC;AAEApB,QAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,SAAD,EAAY3E,UAAU,CAAEmB,OAAF,CAAtB,CAAjB,CAAN;AACAwD,QAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,aAAD,EAAgB,QAAhB,CAAjB,CAAN;AACA,OAPF;AASA5E,MAAAA,GAAG,CAAC6F,KAAJ,CAAW,OAAX,EACEC,EADF,CACM,OADN,EACe,UAAEC,QAAF,EAAgB;AAC7B,YAAMzE,KAAK,GAAGyE,QAAQ,CAACC,GAAT,EAAd;AAEApB,QAAAA,MAAM,CAAE,aAAF,EAAiBtD,KAAjB,CAAN;AACAsD,QAAAA,MAAM,CAAE,eAAF,EAAmBtD,KAAK,CAACkF,UAAzB,CAAN;AACA,OANF;AAQAxG,MAAAA,GAAG,CACD6F,KADF,CACS,SADT,EAEEC,EAFF,CAEM,OAFN,EAEe,UAAEC,QAAF,EAAgB;AAC7B,YAAM9E,OAAO,GAAG8E,QAAQ,CAACC,GAAT,EAAhB;;AAEA,YAAK,CAAC/E,OAAN,EAAgB;AACf;AACA;;AAED2D,QAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,SAAD,EAAY3D,OAAZ,CAAjB,CAAN;AACA,OAVF;AAYA,KAxIQ;AA0IT2B,IAAAA,WA1IS,qCA0IgC;AAAA,UAA1BgC,MAA0B,SAA1BA,MAA0B;;AAAA;AAAA,UAAf/B,IAAe;AAAA,UAATC,KAAS;;AACxC8B,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC/B,IAAD,EAAOC,KAAP,CAAjB,CAAN;AACA,KA5IQ;AA8IT2D,IAAAA,cA9IS,kCA8ImB;AAAA,UAAVlG,KAAU,UAAVA,KAAU;AAAA,UACnBC,cADmB,GACAD,KADA,CACnBC,cADmB;AAG3B,UAAMkG,WAAW,GAAGlG,cAAc,CAACmG,WAAnC;;AAEA,UAAKD,WAAW,KAAK,CAArB,EAAyB;AACxBlG,QAAAA,cAAc,CAACoG,SAAf;AAEA;AACA;;AAEDpG,MAAAA,cAAc,CAACqG,SAAf;AAEA,KA3JQ;AA6JTjD,IAAAA,YA7JS,gCA6JiBjB,OA7JjB,EA6J2B;AAAA,UAApBiC,MAAoB,UAApBA,MAAoB;AACnCA,MAAAA,MAAM,CAAE,cAAF,EAAkBjC,OAAlB,CAAN;AACA,KA/JQ;AAiKTkB,IAAAA,YAjKS,gCAiKiBlB,OAjKjB,EAiK2B;AAAA,UAApBiC,MAAoB,UAApBA,MAAoB;AACnCA,MAAAA,MAAM,CAAE,cAAF,EAAkBjC,OAAlB,CAAN;AACA,KAnKQ;AAqKTmE,IAAAA,aArKS,iCAqKkBrD,GArKlB,EAqKwB;AAAA,UAAhBmB,MAAgB,UAAhBA,MAAgB;AAEhCA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,gBAAD,EAAmB,IAAnB,CAAjB,CAAN;AAEA,aAAO,IAAIY,OAAJ,CAAa,UAAEC,OAAF,EAAe;AAClCzF,QAAAA,GAAG,CACD6F,KADF,CACS,KADT,EAEEA,KAFF,CAESpC,GAFT,EAGEqC,EAHF,CAGM,OAHN,EAGe,UAAAC,QAAQ;AAAA,iBAAI7F,UAAU,CAAE6F,QAAF,CAAV,CAAuBE,IAAvB,CAA6B,UAAE1B,OAAF,EAAe;AACrE,gBAAMrD,OAAO,GAAGjB,UAAU,CAAEsE,OAAF,CAA1B;AAEAK,YAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,SAAD,EAAY1D,OAAZ,CAAjB,CAAN;AACA0D,YAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,gBAAD,EAAmB,KAAnB,CAAjB,CAAN;AACAa,YAAAA,OAAO;AAEP,WAPyB,CAAJ;AAAA,SAHvB;AAWA,OAZM,CAAP;AAaA,KAtLQ;AAwLTsB,IAAAA,cAxLS,kCAwL0BtD,GAxL1B,EAwLgC;AAAA,UAAvBmB,MAAuB,UAAvBA,MAAuB;AAAA,UAAfrE,KAAe,UAAfA,KAAe;AAAA,UAChCa,OADgC,GACHb,KADG,CAChCa,OADgC;AAAA,UACvBT,eADuB,GACHJ,KADG,CACvBI,eADuB;AAAA,UAGhCqG,IAHgC,GAGvBjH,MAAM,CAACkH,OAAP,CAAeC,OAHQ,CAGhCF,IAHgC;AAKxC,UAAIG,MAAJ;;AAEA,UAAKH,IAAI,KAAK,UAAd,EAA2B;AAC1BG,QAAAA,MAAM,GAAG/F,OAAO,CAACgG,IAAR,CAAc,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAAC5D,GAAF,KAAUA,GAAd;AAAA,SAAf,CAAT;AACA,OAFD,MAGK;AACJ0D,QAAAA,MAAM,GAAG,IAAT;;AAEA,YAAKxG,eAAe,CAAC8C,GAAD,CAApB,EAA4B;AAC3B0D,UAAAA,MAAM,GAAG/F,OAAO,CAACgG,IAAR,CAAc,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC5D,GAAF,KAAUA,GAAd;AAAA,WAAf,CAAT;AACA;AACD;;AAED,UAAK,CAAC0D,MAAN,EAAe;AACdpH,QAAAA,MAAM,CAACuH,OAAP,CAAgB;AAAEN,UAAAA,IAAI,EAAJA;AAAF,SAAhB;AACA;AACA;;AAEDpC,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,cAAD,EAAiBuC,MAAjB,CAAjB,CAAN;AACAvC,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,iBAAD,EAAoB,MAApB,CAAjB,CAAN;AAEA,KAlNQ;AAoNT2C,IAAAA,eApNS,mCAoNqB;AAAA,UAAX3C,MAAW,UAAXA,MAAW;AAC7BA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,cAAD,EAAiB,EAAjB,CAAjB,CAAN;AACAA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,iBAAD,EAAoB,QAApB,CAAjB,CAAN;AACA,KAvNQ;AAyNTX,IAAAA,gBAzNS,oCAyNqBC,MAzNrB,EAyN8B;AAAA,UAAnBU,MAAmB,UAAnBA,MAAmB;AACtCA,MAAAA,MAAM,CAAE,kBAAF,EAAsBV,MAAtB,CAAN;AACA,KA3NQ;AA6NTG,IAAAA,iBA7NS,qCA6NuB;AAAA,UAAXO,MAAW,UAAXA,MAAW;AAC/BA,MAAAA,MAAM,CAAE,mBAAF,CAAN;AACA,KA/NQ;AAiOT4C,IAAAA,UAjOS,8BAiOsB/D,GAjOtB,EAiO4B;AAAA,UAAvBmB,MAAuB,UAAvBA,MAAuB;AAAA,UAAfrE,KAAe,UAAfA,KAAe;AAAA,UAC5BE,IAD4B,GACFF,KADE,CAC5BE,IAD4B;AAAA,UACtBE,eADsB,GACFJ,KADE,CACtBI,eADsB;;AAGpC,UAAK,CAACF,IAAN,EAAa;AACZmE,QAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,iBAAD,EAAoB,MAApB,CAAjB,CAAN;AACA;AACA;;AANmC,UAQ5BgB,GAR4B,GAQpBnF,IARoB,CAQ5BmF,GAR4B;AAUpC,UAAM6B,OAAO,GAAG9G,eAAe,CAAC8C,GAAD,CAAf,KAAyBiE,SAAzC;;AAEA,UAAKD,OAAL,EAAe;AACdzH,QAAAA,GAAG,CACD6F,KADF,CACS,cADT,EAEEA,KAFF,CAESD,GAFT,EAGEC,KAHF,CAGSpC,GAHT,EAIEkE,MAJF;AAKA;AACA;;AAED3H,MAAAA,GAAG,CACD6F,KADF,CACS,cADT,EAEEA,KAFF,CAESD,GAFT,EAGEC,KAHF,CAGSpC,GAHT,EAIEmE,GAJF,CAIOC,IAAI,CAACC,GAAL,EAJP;AAMA,KA5PQ;AA8PTxD,IAAAA,MA9PS,0BA8PWyD,KA9PX,EA8PmB;AAAA,UAAlBnD,MAAkB,UAAlBA,MAAkB;;AAE3B,UAAK,CAACmD,KAAN,EAAc;AACbnD,QAAAA,MAAM,CAAE,QAAF,EAAY,IAAZ,CAAN;AACA;AACA;;AAEDA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,aAAD,EAAgB,SAAhB,CAAjB,CAAN;AAEAxE,MAAAA,MAAM,CAAE2H,KAAF,CAAN,CACE9B,IADF,CACQ,UAAE1B,OAAF,EAAe;AACrBK,QAAAA,MAAM,CAAE,QAAF,EAAYL,OAAZ,CAAN;AACA,OAHF;AAIA,KA3QQ;AA6QTyD,IAAAA,MA7QS,0BA6QY;AAAA,UAAXpD,MAAW,UAAXA,MAAW;AAEpBA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,cAAD,EAAiB,IAAjB,CAAjB,CAAN;AACAA,MAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,mBAAD,EAAsB,SAAtB,CAAjB,CAAN;AAEAzE,MAAAA,MAAM,GACJ8F,IADF,CACQ,YAAM;AACZrB,QAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,mBAAD,EAAsB,SAAtB,CAAjB,CAAN;AACA,OAHF,EAIEqD,KAJF,CAIS,UAAEC,GAAF,EAAW;AAAA,YACVC,MADU,GACCD,GADD,CACVC,MADU;;AAGlB,YAAKA,MAAM,KAAK,GAAhB,EAAsB;AACrBvD,UAAAA,MAAM,CAAE,aAAF,EAAiB,CAAC,mBAAD,EAAsB,OAAtB,CAAjB,CAAN;AACA;AACA;;AAEDsD,QAAAA,GAAG,CAACE,IAAJ,GACEnC,IADF,CACQ,UAAEoC,GAAF,EAAW;AACjBC,UAAAA,OAAO,CAACC,GAAR,CAAaF,GAAb;AACAzD,UAAAA,MAAM,CAAE,YAAF,EAAgByD,GAAG,CAACtE,MAApB,CAAN;AACA,SAJF;AAKA,OAjBF;AAkBA,KApSQ;AAsSTC,IAAAA,WAtSS,+BAsSiB;AAAA,UAAXY,MAAW,UAAXA,MAAW;AACzBA,MAAAA,MAAM,CAAE,aAAF,CAAN;AACA,KAxSQ;AA0STJ,IAAAA,YA1SS,gCA0SyB;AAAA,UAAlBI,MAAkB,UAAlBA,MAAkB;AAAA,UAAVrE,KAAU,UAAVA,KAAU;AAAA,UACzBgB,OADyB,GACbhB,KADa,CACzBgB,OADyB;AAGjC,UAAMkD,cAAc,GAAGlD,OAAO,CAACgC,MAAR,CAAgB,UAAEC,GAAF,EAAON,MAAP,EAAmB;AAAA,YACjDO,GADiD,GACnCP,MADmC,CACjDO,GADiD;AAAA,YAC5CN,IAD4C,GACnCD,MADmC,CAC5CC,IAD4C;;AAGzD,gBAASA,IAAT;AAEC,eAAK,SAAL;AAAgB;AACfK,cAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACA;AACA;;AAED,eAAK,WAAL;AAAkB;AACjBD,cAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACA;AACA;;AAED,eAAK,MAAL;AAAa;AACZ,kBAAM+E,UAAU,GAAGtF,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBN,KAArC;AACAU,cAAAA,GAAG,CAACC,GAAD,CAAH,GAAW+E,UAAX;AACA;AACA;;AAED,eAAK,YAAL;AAAmB;AAClB,kBAAMA,WAAU,GAAGtF,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBN,KAArC;AACAU,cAAAA,GAAG,CAACC,GAAD,CAAH,GAAW+E,WAAX;AACA;AACA;;AAED;AAAS;AACR;AACA;AA1BF;;AA6BA,eAAOhF,GAAP;AAEA,OAlCsB,EAkCpB,EAlCoB,CAAvB;AAoCAoB,MAAAA,MAAM,CAAE,cAAF,EAAkBH,cAAlB,CAAN;AAEA;AAnVQ;AApMoB,CAAhB,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport Swiper from 'swiper';\nimport firebase from 'firebase';\nimport 'firebase/auth';\n\nimport router from '@/router';\n\nimport { Ref } from '@/lib/db';\nimport { ObjToArray, FilterNode } from '@/lib/utils';\n\nimport { Upload, Search } from '@/lib/API';\n\nVue.use( Vuex );\n\nexport default new Vuex.Store( {\n\tstate : {\n\t\tsideMenuSwiper : null,\n\n\t\tuser    : false,\n\t\tisAdmin : false,\n\n\t\tsavedCourseKeys : {},\n\n\t\tsubjectMap : {},\n\t\tsubjects   : [],\n\n\n\t\tactiveCourse    : {},\n\t\tcourseInfoState : 'closed',\n\n\t\tuserSwiperState : 'closed',\n\n\t\tschools        : [],\n\t\tsectors        : [],\n\t\tloadingSectors : true,\n\n\t\tcourses         : [],\n\t\tcourseState     : 'loading',\n\t\tmodel           : {},\n\t\tfilters         : [],\n\t\topenedFilters   : {},\n\t\tselectedFilters : {},\n\n\t\tsearchResults : null,\n\n\t\tuploadOpened      : false,\n\t\tuploadErrors      : [],\n\t\tuploadErrorsState : 'upload',\n\n\t\tmodalState : 'browse',\n\t\tmodalStep  : 'open',\n\t\tnewSector  : {\n\t\t\ttitle   : null,\n\t\t\ticonUrl : null,\n\t\t\tfileUrl : null,\n\t\t},\n\t\tisEditing : false,\n\n\t},\n\tmutations : {\n\t\t/* eslint-disable no-param-reassign */\n\t\tupdateSwiper( state, swiper ) {\n\t\t\tstate.sideMenuSwiper = swiper;\n\t\t},\n\n\t\tdestroySideMenuSwiper( state ) {\n\t\t\tstate.sideMenuSwiper.destroy( false, false );\n\t\t},\n\n\t\tupdateUser( state, payload ) {\n\t\t\tconst { user, isAdmin } = payload;\n\n\t\t\tstate.user = user;\n\t\t\tstate.isAdmin = isAdmin;\n\t\t},\n\n\t\tupdateStore( state, [prop, value] ) {\n\t\t\tstate[prop] = value;\n\t\t},\n\n\t\tupdateFilters( state, filters ) {\n\t\t\tconst formattedFilters = filters.map( ( filter ) => {\n\t\t\t\tconst { type } = filter;\n\n\t\t\t\tif ( type === 'list' ) {\n\t\t\t\t\tfilter.options = [{ value : 'All' }].concat( filter.options );\n\t\t\t\t}\n\n\t\t\t\tif ( type === 'multi-list' ) {\n\t\t\t\t\tfilter.options = [{ abv : 'All', value : 'All' }].concat( filter.options );\n\t\t\t\t}\n\n\t\t\t\treturn filter;\n\t\t\t} );\n\n\t\t\tconst selectedFilters = formattedFilters.reduce( ( obj, filter ) => {\n\t\t\t\tconst { key, type } = filter;\n\n\t\t\t\tswitch ( type ) {\n\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\tobj[key] = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'arbitrary':\n\t\t\t\t\t\tobj[key] = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\tobj[key] = filter.options[0].value;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'multi-list':\n\t\t\t\t\t\tobj[key] = filter.options[0].value;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t}, {} );\n\n\n\t\t\tconst openedFilters = filters.reduce( ( obj, filter ) => {\n\t\t\t\tconst { key, type } = filter;\n\n\t\t\t\tif ( type !== 'boolean' ) {\n\t\t\t\t\tobj[key] = false;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t}, {} );\n\n\t\t\tstate.selectedFilters = selectedFilters;\n\t\t\tstate.openedFilters   = openedFilters;\n\t\t\tstate.filters         = formattedFilters.sort( ( filter ) => {\n\t\t\t\tconst { type } = filter;\n\n\t\t\t\tif ( type === 'boolean' || type === 'arbitrary' ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t} );\n\n\t\t},\n\n\t\tupdateModel( state, model ) {\n\t\t\tstate.model = model;\n\t\t},\n\n\t\tupdateOpened( state, payload ) {\n\t\t\tconst { key, value } = payload;\n\n\t\t\tstate.openedFilters[key] = value;\n\t\t},\n\n\t\tselectFilter( state, payload ) {\n\t\t\tconst { key, value } = payload;\n\t\t\tstate.selectedFilters[key] = value;\n\t\t},\n\n\t\tuploadFail( state, errors ) {\n\n\t\t\tstate.uploadErrorsState = 'fail';\n\t\t\tstate.uploadErrors      = errors;\n\n\t\t},\n\n\t\tcloseUpload( state ) {\n\t\t\tstate.uploadOpened      = false;\n\t\t\tstate.uploadErrors      = [];\n\t\t\tstate.uploadErrorsState = 'upload';\n\t\t},\n\n\t\topenSectorUpload( state, sector ) {\n\n\t\t\tstate.modalState = 'add-sector';\n\n\t\t\tif ( sector ) {\n\t\t\t\tstate.isEditing = true;\n\t\t\t\tstate.newSector = Object.assign( {}, sector );\n\t\t\t}\n\n\t\t},\n\n\t\tcloseSectorUpload( state ) {\n\t\t\tstate.modalState = 'browse';\n\t\t\tstate.modalStep  = 'open';\n\n\t\t\tstate.newSector = {\n\t\t\t\ttitle   : null,\n\t\t\t\ticonUrl : null,\n\t\t\t\tfileUrl : null,\n\t\t\t};\n\n\t\t\tstate.isEditing = false;\n\t\t},\n\n\t\tsearch( state, results ) {\n\t\t\tstate.searchResults = results;\n\t\t\tstate.courseState   = 'loaded';\n\t\t},\n\n\t\tresetFilters( state, defaultFilters ) {\n\t\t\tstate.selectedFilters = defaultFilters;\n\t\t}\n\n\t\t/* eslint-enable no-param-reassign */\n\t},\n\tactions : {\n\n\t\tinitSideMenuSwiper( { state, commit } ) {\n\n\t\t\tconst { sideMenuSwiper } = state;\n\n\t\t\tif ( sideMenuSwiper && !sideMenuSwiper.destroyed ) {\n\t\t\t\tsideMenuSwiper.destroy();\n\t\t\t}\n\n\t\t\tconst swiper = new Swiper( '#side-menu-swiper', { // eslint-disable-line\n\t\t\t\t// auto initialize this swiper\n\t\t\t\tinit         : true,\n\t\t\t\tinitialSlide : 1,\n\n\t\t\t\t// swiper settings\n\t\t\t\tslidesPerView   : 'auto', // don't force every slide to be 100vw\n\t\t\t\tspeed           : 400, // ms for when you let go of swipe\n\t\t\t\tspaceBetween    : 0, // no space between\n\t\t\t\tresistanceRatio : 0, // stops you from swiping past all slides\n\t\t\t\tdirection       : 'horizontal',\n\n\t\t\t\tthreshold : 50, // min distance for scroll to work\n\t\t\t} );\n\n\t\t\tcommit( 'updateSwiper', swiper );\n\t\t},\n\n\t\tdestroySideMenuSwiper( { commit } ) {\n\t\t\tcommit( 'destroySideMenuSwiper' );\n\t\t},\n\n\t\tinitAuthListener : ( { commit, dispatch } ) => new Promise( ( resolve ) => {\n\n\t\t\tfirebase.auth().onAuthStateChanged( ( user ) => {\n\n\t\t\t\tif ( !user ) {\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\tisAdmin : false\n\t\t\t\t\t};\n\n\t\t\t\t\tcommit( 'updateUser', payload );\n\t\t\t\t\tresolve( user );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { uid } = user;\n\n\t\t\t\tRef\n\t\t\t\t\t.child( 'savedCourses' )\n\t\t\t\t\t.child( uid )\n\t\t\t\t\t.on( 'value', ( snapshot ) => {\n\t\t\t\t\t\tconst savedCourseKeys = snapshot.val() || {};\n\t\t\t\t\t\tcommit( 'updateStore', ['savedCourseKeys', savedCourseKeys] );\n\t\t\t\t\t} );\n\n\t\t\t\tdispatch( 'updateUser', user )\n\t\t\t\t\t.then( resolve );\n\n\t\t\t} );\n\n\t\t} ),\n\n\t\tupdateUser( { commit }, user ) {\n\n\t\t\tconst { uid } = user;\n\n\t\t\treturn Promise.all( [\n\t\t\t\tRef\n\t\t\t\t\t.child( 'users' )\n\t\t\t\t\t.child( uid )\n\t\t\t\t\t.once( 'value' )\n\t\t\t\t\t.then( snapshot => snapshot.val() ),\n\t\t\t\tRef\n\t\t\t\t\t.child( 'roles' )\n\t\t\t\t\t.child( uid )\n\t\t\t\t\t.once( 'value' )\n\t\t\t\t\t.then( snapshot => snapshot.val() ),\n\t\t\t] )\n\t\t\t\t.then( ( data ) => {\n\t\t\t\t\tconst userObj      = data[0];\n\t\t\t\t\tconst isAdmin      = ( data[1] === 'admin' );\n\n\t\t\t\t\tif ( !userObj ) {\n\t\t\t\t\t\treturn userObj;\n\t\t\t\t\t}\n\n\t\t\t\t\tuserObj.uid         = uid;\n\t\t\t\t\tuserObj.displayName = user.displayName;\n\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tuser : userObj,\n\t\t\t\t\t\tisAdmin,\n\t\t\t\t\t};\n\n\t\t\t\t\tcommit( 'updateUser', payload );\n\n\t\t\t\t\treturn userObj;\n\n\t\t\t\t} );\n\t\t},\n\n\t\tgetCatalog( { commit } ) {\n\n\t\t\tcommit( 'updateStore', ['courseState', 'loading'] );\n\n\t\t\tRef\n\t\t\t\t.child( 'courses' )\n\t\t\t\t.on( 'value', ( snapshot ) => {\n\t\t\t\t\tconst courses = snapshot.val() || {};\n\n\t\t\t\t\tcommit( 'updateStore', ['courses', ObjToArray( courses )] );\n\t\t\t\t\tcommit( 'updateStore', ['courseState', 'loaded'] );\n\t\t\t\t} );\n\n\t\t\tRef.child( 'model' )\n\t\t\t\t.on( 'value', ( snapshot ) => {\n\t\t\t\t\tconst model = snapshot.val();\n\n\t\t\t\t\tcommit( 'updateModel', model );\n\t\t\t\t\tcommit( 'updateFilters', model.filterable );\n\t\t\t\t} );\n\n\t\t\tRef\n\t\t\t\t.child( 'schools' )\n\t\t\t\t.on( 'value', ( snapshot ) => {\n\t\t\t\t\tconst schools = snapshot.val();\n\n\t\t\t\t\tif ( !schools ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcommit( 'updateStore', ['schools', schools] );\n\t\t\t\t} );\n\n\t\t},\n\n\t\tupdateStore( { commit }, [prop, value] ) {\n\t\t\tcommit( 'updateStore', [prop, value] );\n\t\t},\n\n\t\ttoggleSideMenu( { state } ) {\n\t\t\tconst { sideMenuSwiper } = state;\n\n\t\t\tconst activeSlide = sideMenuSwiper.activeIndex;\n\n\t\t\tif ( activeSlide === 1 ) {\n\t\t\t\tsideMenuSwiper.slidePrev();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsideMenuSwiper.slideNext();\n\n\t\t},\n\n\t\tupdateOpened( { commit }, payload ) {\n\t\t\tcommit( 'updateOpened', payload );\n\t\t},\n\n\t\tselectFilter( { commit }, payload ) {\n\t\t\tcommit( 'selectFilter', payload );\n\t\t},\n\n\t\tupdateSectors( { commit }, key ) {\n\n\t\t\tcommit( 'updateStore', ['loadingSectors', true] );\n\n\t\t\treturn new Promise( ( resolve ) => {\n\t\t\t\tRef\n\t\t\t\t\t.child( 'cte' )\n\t\t\t\t\t.child( key )\n\t\t\t\t\t.on( 'value', snapshot => FilterNode( snapshot ).then( ( results ) => {\n\t\t\t\t\t\tconst sectors = ObjToArray( results );\n\n\t\t\t\t\t\tcommit( 'updateStore', ['sectors', sectors] );\n\t\t\t\t\t\tcommit( 'updateStore', ['loadingSectors', false] );\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t} ) );\n\t\t\t} );\n\t\t},\n\n\t\topenCourseInfo( { commit, state }, key ) {\n\t\t\tconst { courses, savedCourseKeys } = state;\n\n\t\t\tconst { path } = router.history.current;\n\n\t\t\tlet course;\n\n\t\t\tif ( path === '/courses' ) {\n\t\t\t\tcourse = courses.find( a => a.key === key );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcourse = null;\n\n\t\t\t\tif ( savedCourseKeys[key] ) {\n\t\t\t\t\tcourse = courses.find( a => a.key === key );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !course ) {\n\t\t\t\trouter.replace( { path } );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommit( 'updateStore', ['activeCourse', course] );\n\t\t\tcommit( 'updateStore', ['courseInfoState', 'open'] );\n\n\t\t},\n\n\t\tcloseCourseInfo( { commit } ) {\n\t\t\tcommit( 'updateStore', ['activeCourse', {}] );\n\t\t\tcommit( 'updateStore', ['courseInfoState', 'closed'] );\n\t\t},\n\n\t\topenSectorUpload( { commit }, sector ) {\n\t\t\tcommit( 'openSectorUpload', sector );\n\t\t},\n\n\t\tcloseSectorUpload( { commit } ) {\n\t\t\tcommit( 'closeSectorUpload' );\n\t\t},\n\n\t\tsaveCourse( { commit, state }, key ) {\n\t\t\tconst { user, savedCourseKeys } = state;\n\n\t\t\tif ( !user ) {\n\t\t\t\tcommit( 'updateStore', ['userSwiperState', 'open'] );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { uid } = user;\n\n\t\t\tconst isSaved = savedCourseKeys[key] !== undefined;\n\n\t\t\tif ( isSaved ) {\n\t\t\t\tRef\n\t\t\t\t\t.child( 'savedCourses' )\n\t\t\t\t\t.child( uid )\n\t\t\t\t\t.child( key )\n\t\t\t\t\t.remove();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tRef\n\t\t\t\t.child( 'savedCourses' )\n\t\t\t\t.child( uid )\n\t\t\t\t.child( key )\n\t\t\t\t.set( Date.now() );\n\n\t\t},\n\n\t\tsearch( { commit }, query ) {\n\n\t\t\tif ( !query ) {\n\t\t\t\tcommit( 'search', null );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommit( 'updateStore', ['courseState', 'loading'] );\n\n\t\t\tSearch( query )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\tcommit( 'search', results );\n\t\t\t\t} );\n\t\t},\n\n\t\tupload( { commit } ) {\n\n\t\t\tcommit( 'updateStore', ['uploadOpened', true] );\n\t\t\tcommit( 'updateStore', ['uploadErrorsState', 'loading'] );\n\n\t\t\tUpload()\n\t\t\t\t.then( () => {\n\t\t\t\t\tcommit( 'updateStore', ['uploadErrorsState', 'success'] );\n\t\t\t\t} )\n\t\t\t\t.catch( ( res ) => {\n\t\t\t\t\tconst { status } = res;\n\n\t\t\t\t\tif ( status === 500 ) {\n\t\t\t\t\t\tcommit( 'updateStore', ['uploadErrorsState', 'error'] );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tres.json()\n\t\t\t\t\t\t.then( ( err ) => {\n\t\t\t\t\t\t\tconsole.log( err );\n\t\t\t\t\t\t\tcommit( 'uploadFail', err.errors );\n\t\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t},\n\n\t\tcloseUpload( { commit } ) {\n\t\t\tcommit( 'closeUpload' );\n\t\t},\n\n\t\tresetFilters( { commit, state } ) {\n\t\t\tconst { filters } = state;\n\n\t\t\tconst defaultFilters = filters.reduce( ( obj, filter ) => {\n\t\t\t\tconst { key, type } = filter;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'boolean': {\n\t\t\t\t\t\tobj[key] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'arbitrary': {\n\t\t\t\t\t\tobj[key] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'list': {\n\t\t\t\t\t\tconst defaultVal = filter.options[0].value;\n\t\t\t\t\t\tobj[key] = defaultVal;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'multi-list': {\n\t\t\t\t\t\tconst defaultVal = filter.options[0].value;\n\t\t\t\t\t\tobj[key] = defaultVal;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\n\t\t\t}, {} );\n\n\t\t\tcommit( 'resetFilters', defaultFilters );\n\n\t\t}\n\n\t}\n} );\n"]}]}